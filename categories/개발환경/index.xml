<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>개발환경 on InterP Blog</title><link>https://interp.blog/categories/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/</link><description>Recent content in 개발환경 on InterP Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Wed, 26 Jun 2019 05:11:21 +0000</lastBuildDate><atom:link href="https://interp.blog/categories/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/index.xml" rel="self" type="application/rss+xml"/><item><title>Visual Studio Code Remote Deployment</title><link>https://interp.blog/visual-studio-code-remote-deployment/</link><pubDate>Wed, 26 Jun 2019 05:11:21 +0000</pubDate><guid>https://interp.blog/visual-studio-code-remote-deployment/</guid><description>Vim 과 SSH 에 찌들어 있었는데, 이번 Visual Studio Code 의 베타 기능인 Remote Deployment 를 연결해 보고 나서, 학생 때 쓰던 IDE 로 돌아간 것 같아 너무 좋았다. 언제까지고 구식 도구를 쓰며 부심을 부릴 수만은 없다. 설치 과정이 조금 험난했지만, 간단히 요약해서 써본다.
클라이언트 OS 는 윈도우 10 (빌드 1809), 서버 OS 는 Cent OS 7 기준으로 작성한다.
클라이언트 (윈도우) 준비 처음에 준비할 때는 Visual Studio Code Insider 버전을 설치하라고 되어 있었는데, 이제는 꼭 그럴 필요 없는 것 같다.</description></item><item><title>Windows SSH RSA Key 문제 해결</title><link>https://interp.blog/windows-ssh-rsa-key-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0/</link><pubDate>Mon, 18 Mar 2019 04:50:30 +0000</pubDate><guid>https://interp.blog/windows-ssh-rsa-key-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0/</guid><description>Windows Server 2016에서 OpenSSH 를 설치하고, cmd 에서 다음과 같이 RSA 키를 생성한다.
그러고 Public Key 를 SSH Server 에 위치한 authorized_keys 파일에 추가하고 접속을 시도하면?
오잉? 내 파일이 맞는데 이게 뭘까. Private Key 파일에 마우스 우클릭을 하고 봤더니 여러 사용자가 읽기 권한으로 걸려 있는 것을 확인할 수 있었다. 이건 아니다… 등록된 사용자를 전부 지우고 현재 사용자에게 모든 권한을 준 다음에, 확인을 눌러 권한 변경을 해 준다.
&amp;lsquo;편집&amp;rsquo; 에 가서 등록된 사용자를 지우려고 하면, 상속으로 인해 지울 수 없다는 괴상한 에러가 뜰 것이다.</description></item><item><title>Gitlab merge request 옵션 기본으로 두기</title><link>https://interp.blog/set-gitlab-merge-request-checked/</link><pubDate>Tue, 13 Nov 2018 05:03:22 +0000</pubDate><guid>https://interp.blog/set-gitlab-merge-request-checked/</guid><description>Gitlab Community 에서 필요로 하는 기능인데, 이렇게 수동으로 할 수 있어서 간단히 남긴다. Gitlab 에 있는 merge request 에 보면 다음 옵션이 있는데, 전부 체크가 해제되어 있다.
Merge Request 에 성공한 Source Branch 를 삭제 Merge Request 할 때 Commit 을 하나로 뭉쳐서 Merge (=Squash Merge) 이 체크박스를 개발자가 일일해 해 줘야 하는 문제가 있다. 그래서 어떤 개발자는 체크하는 것을 까먹었다가 master branch 의 commit tree 를 엉망으로 만들기도 한다.</description></item><item><title>gdb commands 이용하기</title><link>https://interp.blog/gdb-commands-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Tue, 06 Feb 2018 08:46:05 +0000</pubDate><guid>https://interp.blog/gdb-commands-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>gdb/ddd 에서 commands 를 사용하면 간편하게 breakpoint 의 상태를 출력할 수 있다. 물론 다양하게 응용이 가능하겠지만, 매뉴얼에서 제시한 케이스가 굉장히 편해서 따로 정리한다.
참고 : 매뉴얼
Breakpoint 상황을 출력하기 위 코드에서 if 문에 breakpoint 를 걸고, 할당받은 시작 주소와 그 크기를 보고자 한다. 한두번 발생하는 거라면 breakpoint 를 걸어 둔 다음 print 나 graph display (ddd 전용) 으로 띄워서 관찰하면 된다. 그런데 이게 100번 200번이면 하염없이 엔터를 치게 된다.
이럴 때 다음과 같이 입력한다.</description></item><item><title>Intel VTune Memory Bandwidth 분석하기</title><link>https://interp.blog/vtune-memory-bandwidth/</link><pubDate>Mon, 22 Jan 2018 05:19:48 +0000</pubDate><guid>https://interp.blog/vtune-memory-bandwidth/</guid><description>Intel VTune 으로 Memory Bandwidth 를 분석하려면, 분석할 수 있는 커널 드라이버를 로딩시켜야 한다. (참고로 메모리 분석은 리눅스에서만 가능하다.) 해당 작업을 하지 않고 &amp;lsquo;General Exploration &amp;gt; Analyze memory bandwidth&amp;rsquo; 를 체크하면 엄한 경고창이 반길 것이다.
이 문서를 참고해도 좋지만, VTune 이 설치된 경로에서 sepdk/src/README.txt 를 보는 게 더 쉽다. 이 내용을 요약하면,
커널 환경변수를 체크한다. 프로파일링이 가능하고 모듈 로딩이 가능해야 한다. CONFIG_MODULES=y CONFIG_MODULE_UNLOAD=y CONFIG_PROFILING=y 커널 드라이버를 컴파일시킬 헤더파일이 필요하다.</description></item><item><title>Gitlab 아바타/첨부파일 상대 경로 설정</title><link>https://interp.blog/gitlab-%EC%95%84%EB%B0%94%ED%83%80-%EC%83%81%EB%8C%80-%EA%B2%BD%EB%A1%9C-%EC%84%A4%EC%A0%95/</link><pubDate>Mon, 08 Jan 2018 02:35:20 +0000</pubDate><guid>https://interp.blog/gitlab-%EC%95%84%EB%B0%94%ED%83%80-%EC%83%81%EB%8C%80-%EA%B2%BD%EB%A1%9C-%EC%84%A4%EC%A0%95/</guid><description>Gitlab의 External_Url 을 실제 서버 주소와 다르게 설정할 때엔, 실제 nginx 에도 해당 도메인으로 접근할 수 있도록 설정해야 하는 게 맞다. 그렇지 않으면, 첨부파일과 아바타 이미지가 모두 깨져나온다. 하지만 그러기 전에 Gitlab 차원에서 상대 경로로 아바타를 출력할 수 있도록 수정하는 방법 &amp;lsquo;도&amp;rsquo; 있으니 편법으로 수정했다.
아바타 상대 경로 설정 /opt/gitlab/embedded/service/gitlab-rails/app/models/concerns/avatarable.rb 파일에서 절대 경로로 수정하는 코드가 있는데, url_base 에 덧붙이는 코드들을 전부 주석처리하면 된다.
당연히 gitlab-ctl reconfigure &amp;amp;&amp;amp; gitlab-ctl restart 를 해 줘야 한다.</description></item><item><title>Gitlab Markdown Parser 바꾸기</title><link>https://interp.blog/gitlab-markdown-parser-%EB%B0%94%EA%BE%B8%EA%B8%B0/</link><pubDate>Wed, 03 Jan 2018 02:29:21 +0000</pubDate><guid>https://interp.blog/gitlab-markdown-parser-%EB%B0%94%EA%BE%B8%EA%B8%B0/</guid><description>Git 기반 프로세스 도구인 Gitlab 은 오픈소스이기 때문에 Community Edition 을 쓰건, Enterprise Edition 을 쓰건 상관없이 맘대로 수정해서 사용이 가능하다. 물론 적절한 감(?)으로 수정할 곳을 찾아야 하는 번거로움은 있다. 여기서는 Gitlab에서 문서 작성에 필요한 Markdown 의 Parser 부분을 수정하기 위한 방법을 정리해 둔다. Ruby 개발자가 아니라서 전체 빌드 순서가 정공법처럼 보이진 않겠지만.
Gitlab의 Markdown Parser는 Redcarpet 을 사용한다. 아마 Jekyll 도 기본적으로 Redcarpet 을 사용하는 것으로 알고 있다. 만약 Ruby의 Redcarpet 을 Markdown Parser 로 쓰는 경우라면 똑같이 적용이 가능하다.</description></item><item><title>X11 on Windows Linux Subsystem</title><link>https://interp.blog/x11-windows-linux-subsystem/</link><pubDate>Wed, 29 Nov 2017 08:32:52 +0000</pubDate><guid>https://interp.blog/x11-windows-linux-subsystem/</guid><description>제목은 다음 내용을 포함하고 있다.
Windows 10 에서 지원하는 Linux Subsystem 기능에 대해 이야기한다. 잘 모르겠다면 이 글을 읽고 설치에 도전해 보자. 그런데 글 내용을 보면 이거랑 관련 없다. Babun, Mintty, Git on Bash, Putty 전부 포함이다 SSH에 접속한 서버에서 X11 Forwarding 을 받고 싶은 경우를 이야기한다. 단적으로, 접속한 서버에서 파이어폭스 브라우저를 실행하면 내 윈도우 화면에 브라우저 창이 실행되는 거다. 이걸 따로 이야기하고 싶지 않으니 Xming 이나 VcXsrv (추천) 을 참고해 설치해보자.</description></item><item><title>Gitlab 삽질기</title><link>https://interp.blog/gitlab-%EC%82%BD%EC%A7%88%EA%B8%B0/</link><pubDate>Wed, 15 Nov 2017 09:17:58 +0000</pubDate><guid>https://interp.blog/gitlab-%EC%82%BD%EC%A7%88%EA%B8%B0/</guid><description>Upgrade 8.x 로 쓰다가 10.x 로 업그레이드를 진행했다. 아니.. 그런데 Postgresql Database 버전이 다르다고? 알고보니 이렇게 대격변을 일으키면 안 되던 거였다. 그래서 겸사겸사 9.5.10 으로 다시 설치하니까 된다.
gitlab-ctl reconfigure 를 설치 직후에 반드시 해 줘야 한다. 가끔 gitlab-ctl pg-upgrade 를 꼭 하라는 말이 있던데, 내가 해보니까 gitlab-ctl reconfigure 할 때 알아서 한다 (…) 했던 거 또 하는 느낌. gitlab-ctl restart 를 할 때 postgresql 이나 다른 곳에서 &amp;lsquo;down, up, want up&amp;rsquo; 이런 게 뜨면 서비스가 온전히 수행될 수 없는 상황이다.</description></item><item><title>amazon web server 에서 WordPress 업데이트</title><link>https://interp.blog/amazon-web-server-%EC%97%90%EC%84%9C-wordpress-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</link><pubDate>Tue, 08 Aug 2017 09:16:18 +0000</pubDate><guid>https://interp.blog/amazon-web-server-%EC%97%90%EC%84%9C-wordpress-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</guid><description>Amazon Web Server에서 WordPress를 설치하고, 플러그인이나 워드프레스를 업그레이드 하라고 하면… FTP 정보를 등록하라고 나온다. 그렇게 하지 않아도, 여기서 제시한 것 처럼 권한 사용자만 바꿔줘도 된다.</description></item><item><title>Docker에서 apt-get update가 실패할 때</title><link>https://interp.blog/docker%EC%97%90%EC%84%9C-apt-get-update%EA%B0%80-%EC%8B%A4%ED%8C%A8%ED%95%A0-%EB%95%8C/</link><pubDate>Thu, 03 Aug 2017 05:48:18 +0000</pubDate><guid>https://interp.blog/docker%EC%97%90%EC%84%9C-apt-get-update%EA%B0%80-%EC%8B%A4%ED%8C%A8%ED%95%A0-%EB%95%8C/</guid><description>ubuntu 14.04 를 기반으로 한 Dockerfile 에,SSH를 설치하기 위해 아래와 같이 작성했다고 하자.
그러면 archive.ubuntu.com Repository 에서 Update를 받는데, 갑자기 이런 메시지가 뜬다.
검색해 봐도 Docker나 Dockerfile의 문제 같지는 않다. 그렇다면 정말 Repository가 Hash Sum Mismatch 문제를 가지고 있는 것은 아닐까?
어차피 Build 하는 시점에는 어느 Repository를 써도 상관이 없으니, 전통의 kr.archive.ubuntu.com 를 사용하도록 Dockerfile을 수정해 봤다.
아주 잘 된다!</description></item><item><title>vim의 Ctrl 단축키</title><link>https://interp.blog/vim%EC%9D%98-ctrl-%EB%8B%A8%EC%B6%95%ED%82%A4/</link><pubDate>Wed, 29 Mar 2017 05:08:10 +0000</pubDate><guid>https://interp.blog/vim%EC%9D%98-ctrl-%EB%8B%A8%EC%B6%95%ED%82%A4/</guid><description>몇 가지는 이미 알고 있었고, 몇 가지는 새로 찾은 것들이 되겠다. 모든 단축키를 알려줄 순 없지만 자주 사용할 법한 것들 위주로 정리해 둔다.
Ctrl+r 가장 기초적인 것부터 보도록 하자.
거의 대부분의 저작도구에서 지원하는 &amp;lsquo;되돌리기(Undo)&amp;rsquo; 와 &amp;lsquo;다시하기(Redo)&amp;rsquo; 를 Vim 도 지원한다. 되돌리기는 u 이며, 다시 하기가 바로 Ctrl+r이다.
Ctrl+a / Ctrl+x Ctrl+a는 커서가 위치한 줄에 한해, 커서 다음에 위치한 숫자를 찾아서 1 증가시킨다. 반대로 숫자를 감소시키는 단축키는 Ctrl+x이다.
vim은 엑셀이 아니기 때문에, 셀을 끌어당겨서 숫자를 1씩 증가시키는 그런 기능이 없다.</description></item><item><title>WordPress 에디터 단축키 변경하기</title><link>https://interp.blog/wordpress-%EC%97%90%EB%94%94%ED%84%B0-%EB%8B%A8%EC%B6%95%ED%82%A4-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/</link><pubDate>Thu, 23 Mar 2017 13:04:12 +0000</pubDate><guid>https://interp.blog/wordpress-%EC%97%90%EB%94%94%ED%84%B0-%EB%8B%A8%EC%B6%95%ED%82%A4-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/</guid><description>WordPress는 기본적으로 TinyMCE를 탑재하고 있는데, 기본 단축키가 존재한다. 글을 작성할 때 굉장히 편하게 쓸 수 있다. 그런데 나는 Confluence 에 내장된 TinyMCE에 익숙해져서, 단축키를 두 번 외우기 싫어서 이걸 바꿔보려고 했다. (당장 태그를 정하는 것만 해도 Confluence 는 Ctrl + 1 인데, WordPress 는 Shift + Alt + 1 이다. 엄청 불편하다!)
단축키 변경 원리 보통 wp-include/js/tinymce/tinymce.min.js 안에 addShortcut 이 지정되어 있다. 이걸 바꾸면 되는데, 다음과 같은 규칙이 있다.
단축키 패턴은, 소문자로 적어도 상관없다</description></item><item><title>우분투 fcitx 한/영키, 한자키 매핑</title><link>https://interp.blog/%EC%9A%B0%EB%B6%84%ED%88%AC-fcitx-%ED%95%9C%EC%98%81%ED%82%A4-%ED%95%9C%EC%9E%90%ED%82%A4-%EB%A7%A4%ED%95%91/</link><pubDate>Mon, 20 Mar 2017 07:01:03 +0000</pubDate><guid>https://interp.blog/%EC%9A%B0%EB%B6%84%ED%88%AC-fcitx-%ED%95%9C%EC%98%81%ED%82%A4-%ED%95%9C%EC%9E%90%ED%82%A4-%EB%A7%A4%ED%95%91/</guid><description>레오폴드의 키보드가 으레 그렇지만, 750RT 버전의 경우 한/영키와 한자키가 각각 ALT/CTRL 와 같이 매핑이 되어 있다. 윈도우라면 아무런 걱정이 없었지만, 우분투에서 쓰려니까 다음과 같은 단점이 생겼다.
키보드가 레오폴드가 아니더라도, 우분투에서 오른쪽의 ALT/CTRL 키를 한/영키와 한자키로 쓰고자 하는 분들에게 유용할 것 같아서 정리한다. 16.04 LTS부터 기본 지원되는 fcitx를 기준으로 설명한다.
fcitx에서 한/영키를 Ralt 로 설정하는 것은 가능하다. 그러나 이게 OS에서 그대로 ALT 로 인식한다는 게 문제다. 타이핑 도중 한/영키를 누르면 타이핑 글자와 함께 조합키로 인식되어 입력 변환이 원활하지 않다는 느낌이 든다.</description></item><item><title>키보드 키 바운싱 문제 해결</title><link>https://interp.blog/%ED%82%A4%EB%B3%B4%EB%93%9C-%ED%82%A4-%EB%B0%94%EC%9A%B4%EC%8B%B1-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0/</link><pubDate>Mon, 20 Mar 2017 02:25:04 +0000</pubDate><guid>https://interp.blog/%ED%82%A4%EB%B3%B4%EB%93%9C-%ED%82%A4-%EB%B0%94%EC%9A%B4%EC%8B%B1-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0/</guid><description>회사에서 기계식 키보드를 아무거나 사라고 해서 i-rocks의 KR-6251 을 사서 5년 째 쓰고 있다. 2년 전부터 몇몇 키들은 한 번 누를 때마다 두 번 입력되는 느낌을 받았고, 쓰면서 이 현상이 더욱 가중되어 성가신 느낌을 지우기 힘들었다.
그런데 이 문제를 어떻게 웹에 검색하지? 감을 잡을 수 없어서 &amp;lsquo;그냥 새로운 키보드를 사야하는 건가!&amp;rsquo; 라고까지 고민하고 있었다. (이럴 때만 지름신이 오셔서 &amp;lsquo;비싼 기계식 키보드를 사서 쓰렴, 껄껄&amp;rsquo; 이라고 조언해준다.) 그러다가 우연찮게 이런 문제를 무엇이라고 말하는지 알 수 있었다.</description></item><item><title>Vim Plugin</title><link>https://interp.blog/vim-plugin-%EC%97%90-%EB%8C%80%ED%95%B4/</link><pubDate>Wed, 15 Mar 2017 01:41:28 +0000</pubDate><guid>https://interp.blog/vim-plugin-%EC%97%90-%EB%8C%80%ED%95%B4/</guid><description>ack.vim 을 설치하려니까 Vim Plugin Manager 란 게 있는 사실도 알았다. 누구는 Vim Plugin을 상위권부터 하나씩 써보고 마음에 드는 걸 적용하고 있다는데, 나도 그래야겠다 싶어서 여기에 정리해 두고자 한다. 여기서는 플러그인에 대해서 먼저 알아보고, 플러그인마다 제공하는 가장 많이 사용하는 플러그인들을 알아본 다음에, 최종적으로는 내가 원하는 ack.vim 을 설치해보고자 한다.
Vim Plugin Manager : Vundle 집/회사에서의 개발환경이 다르고, 회사에서도 여러 서버를 넘나들며 개발과 유지보수를 해야 하는데, 모든 환경을 일일히 동기화하기엔 귀찮은 것이 사실이다.</description></item><item><title>Confluence Code Macro 빠르게 넣기</title><link>https://interp.blog/confluence-code-macro-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%84%A3%EA%B8%B0/</link><pubDate>Thu, 02 Feb 2017 08:33:43 +0000</pubDate><guid>https://interp.blog/confluence-code-macro-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%84%A3%EA%B8%B0/</guid><description>Code Macro를 자동완성으로 입력하는 방법은 쉽다. 중괄호({)를 시작으로 {code 까지 치면 자동완성 제안이 뜨기 때문이다. 그런데 이 Code block은 Java 문법을 하이라이팅하기 때문에, 다른 언어를 하이라이팅하려면 다음과 같이 해야 된다.
마우스로 박스를 클릭 Edit 클릭 Language에 언어를 선택하고 Save 클릭 이 얼마나 귀찮은 작업인가. 그냥 키보드로 치고 싶다면?
위 애니메이션처럼 {code:&amp;lt;language&amp;gt;} 입력을 하면 된다. (애니메이션 예제는 SQL이다.) 콜론을 찍으면서 자동 완성이 사라지는데 당황하지 말고 전부 입력하면 된다. 원래는 {code:language=&amp;lt;language&amp;gt;} 같이 입력하도록 Confluence 매뉴얼에서 안내하고 있는데, 매크로의 맨 처음 파라메터는 그 attribute를 생략해도 인식되기 때문에 이게 가능하다.</description></item><item><title>Confluence 문서들을 PDF로 출력</title><link>https://interp.blog/confluence-%EB%AC%B8%EC%84%9C-pdf-%EC%B6%9C%EB%A0%A5/</link><pubDate>Fri, 13 Jan 2017 06:52:37 +0000</pubDate><guid>https://interp.blog/confluence-%EB%AC%B8%EC%84%9C-pdf-%EC%B6%9C%EB%A0%A5/</guid><description>Confluence 단일 문서는, 페이지 좌측 상단의 Tools 메뉴에서 Export To PDF 로 가능하지만, 그 하위 문서들 또는 Space 전체 문서를 한 번에 뽑아내는 기능은 찾기가 조금 어려워서 따로 메모해 둔다. 출처는 바로 여기. 물론, 해당 문서가 존재하는 Space 에 권한을 가지고 있어야 된다. 반대로 이야기하면, Personal Space에서는 제약 없이 사용이 가능하다. 이 설명은 Confluence 5.4.3 에서 적용이 가능하다. 그 이하 버전 (특히 Confluence 4.x) 에서는 다른 방법을 쓰거나 플러그인을 써야 할 수도 있다.</description></item><item><title>binary 실행 시 필요한 라이브러리 설치</title><link>https://interp.blog/binary-%EC%8B%A4%ED%96%89-%EC%8B%9C-%ED%95%84%EC%9A%94%ED%95%9C-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98/</link><pubDate>Mon, 26 Dec 2016 01:26:55 +0000</pubDate><guid>https://interp.blog/binary-%EC%8B%A4%ED%96%89-%EC%8B%9C-%ED%95%84%EC%9A%94%ED%95%9C-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98/</guid><description>리눅스에서 바이너리(Binary) 배포판을 받아 설치할 때, 필요한 라이브러리가 누락된 경우에 적용할 수 있는 방법이다. 이 방법은 yum 을 사용하는 RHEL 배포판 (CentOS, Fedora 등) 에서 적용 가능하다. 데비안/우분투 (Debian/Ubuntu) 계열에서 동일한 기능을 하는 명령을 찾는다면 여기를 참고하도록 하자.
먼저 ldd 를 이용해서 빠진 라이브러리가 무엇인지 찾는다. 저기서는 libX11.so.6 가 없다고 나온다.
해당 라이브러리를 제공하는 패키지 이름을 찾는다. yum whatprovides 명령으로 가능하다.
여러 가지 있는데, 애석하게도 해당 라이브러리가 32-bit 이므로 ELSCLASS64 같은 에러를 맞기 싫으면 i686 으로 명명된 32-bit 패키지를 설치해야 한다.</description></item><item><title>vim backreference</title><link>https://interp.blog/vim-%EA%B2%80%EC%83%89%EA%B3%BC-%EC%B9%98%ED%99%98/</link><pubDate>Tue, 06 Dec 2016 03:16:18 +0000</pubDate><guid>https://interp.blog/vim-%EA%B2%80%EC%83%89%EA%B3%BC-%EC%B9%98%ED%99%98/</guid><description>원문 : http://vim.wikia.com/wiki/Search_and_replace
backreference (패턴의 앞/뒤에서 조건으로 둘 수 있는 문자열이지만, 실제 패턴의 치환에는 해당하지 않는 요소) 를 사용하려다 보니 위키 페이지를 정독했다. 기본적인 구문은 넘어간다.
아래는, 공백이나 슬래쉬(/) 외에다른 문자를 달고 있는 astar(asterisk) 다음에, 공백을 추가하는 것이다. (슬래쉬를 뺀 이유는 주석 때문에)</description></item><item><title>Eclipse Ubuntu에서 GTK2로 실행</title><link>https://interp.blog/eclipse-ubuntu%EC%97%90%EC%84%9C-gtk2%EB%A1%9C-%EC%8B%A4%ED%96%89/</link><pubDate>Mon, 28 Nov 2016 00:44:41 +0000</pubDate><guid>https://interp.blog/eclipse-ubuntu%EC%97%90%EC%84%9C-gtk2%EB%A1%9C-%EC%8B%A4%ED%96%89/</guid><description>Eclipse CDT를 Ubuntu 에서 쓰려니까, GTK3 환경에서 자꾸 실행된다. 그 때문에 오버레이 스크롤이고 뭐고 전부 느린 현상이 발생해서, GTK2 환경에서 실행시키려고 했다. 환경설정 파일도 고치고 이것저것 해 봤지만 안 되니까, 결국 아래와 같이 1회에 한해 SWT_GTK3 값을 바꾸는 편법을 사용했다.
SWT_GTK3을 끄면 GTK2 로 eclipse가 실행된다. 그리고 disown 옵션으로 background process를 실행하면 해당 터미널을 종료해도 프로세스가 상주하게 된다. 정확히 말하면 &amp;lsquo;Job 테이블에서 해당 Job을 제거한다 (Remove jobs from the table of active job.</description></item><item><title>좋은 Git Commit Log 작성하기</title><link>https://interp.blog/%EC%A2%8B%EC%9D%80-git-commit-log-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/</link><pubDate>Wed, 09 Nov 2016 05:38:33 +0000</pubDate><guid>https://interp.blog/%EC%A2%8B%EC%9D%80-git-commit-log-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0/</guid><description>여기에서 지목하는 다음 7가지를 알아봅시다.
제목과 내용 사이 한 줄을 넣는다. 제목은 50자 내외로 적는다. 제목 첫 글자는 대문자로 한다. 제목에는 마침표로 끝내지 않는다. 제목은 명령법으로 작성한다. 내용은 한 줄에 72자를 넘지 않도록 줄바꿈한다. 내용은 &amp;lsquo;어떻게&amp;rsquo; 수정했는지 적지 말고, &amp;lsquo;무엇을&amp;rsquo; &amp;lsquo;왜&amp;rsquo; 수정했는지 작성하라. 예를 들어,
제목 제목은 최대한 간결하게, 마침표 없이 명령조로 작성해야 합니다. 제가 자주 본 commit 제목은 &amp;lsquo;Fixed issue #32&amp;rsquo; 같은 식인데, 이건 명령조도 아니고 무엇을 수정했는지도 모호하거든요.</description></item><item><title>Recipe Echoing in Compiling</title><link>https://interp.blog/recipe-echoing-in-compiling/</link><pubDate>Wed, 09 Nov 2016 02:40:58 +0000</pubDate><guid>https://interp.blog/recipe-echoing-in-compiling/</guid><description>GNU Make에서는 ‘Recipe Echoing’ 이라고 부르는데, 아무튼 일반적으로 나오는 컴파일 명령어 줄을 보고 싶지 않고 Warning/Error 만 확인하고자 할 때 사용할 수 있는 명령을 정리한다. 완벽한 해결책은 아닌게, 어떤 파일이 통과되는지 여부는 간단하게나마 확인이 가능해야 하기 때문이다. 이 방법으로는 통과되는 파일들의 목록을 전혀 볼 수 없다.
이걸 대체하고 싶어서 나름 머리를 굴려서 이런 Rule을 덮어 썼다.</description></item><item><title>gdb로 Machine Code 레벨 디버깅</title><link>https://interp.blog/gdb%EB%A1%9C-machine-code-%EB%A0%88%EB%B2%A8-%EB%94%94%EB%B2%84%EA%B9%85/</link><pubDate>Fri, 23 Sep 2016 07:34:47 +0000</pubDate><guid>https://interp.blog/gdb%EB%A1%9C-machine-code-%EB%A0%88%EB%B2%A8-%EB%94%94%EB%B2%84%EA%B9%85/</guid><description/></item><item><title>Ubuntu 14.04 > 16.04 업그레이드</title><link>https://interp.blog/ubuntu-14-04-16-04-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C/</link><pubDate>Wed, 07 Sep 2016 01:56:24 +0000</pubDate><guid>https://interp.blog/ubuntu-14-04-16-04-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C/</guid><description>ibus -&amp;gt; fcitx VirtualBox coding/terminal font D2Coding 폰트를 사용해 보려고 한다. Powerline supported font 를 받기 위해 여기를 참고했다. Github에 있는 Powerline supported D2Coding 보다 더 깔끔하다. 대 만족!</description></item><item><title>ddd에서 소스코드 패널 문제</title><link>https://interp.blog/ddd%EC%97%90%EC%84%9C-%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%ED%8C%A8%EB%84%90-%EB%AC%B8%EC%A0%9C-2/</link><pubDate>Thu, 11 Aug 2016 11:35:11 +0000</pubDate><guid>https://interp.blog/ddd%EC%97%90%EC%84%9C-%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%ED%8C%A8%EB%84%90-%EB%AC%B8%EC%A0%9C-2/</guid><description>원인은 간단하다. ddd에 설정된 폰트로 정상 출력할 수 없는 문자가 포함되어 있기 때문이다. 바로 한글 (코멘트) 때문이다. 해결책은 2가지.
한글 코멘트를 쓰지 않는다 (…) ddd 실행 전에 다음의 환경변수를 지정한다. $ export LC_ALL=C</description></item><item><title>SSH Public Key 교환 실패 시</title><link>https://interp.blog/ssh-public-key-%EA%B5%90%ED%99%98-%EC%8B%A4%ED%8C%A8-%EC%8B%9C/</link><pubDate>Tue, 02 Aug 2016 02:52:02 +0000</pubDate><guid>https://interp.blog/ssh-public-key-%EA%B5%90%ED%99%98-%EC%8B%A4%ED%8C%A8-%EC%8B%9C/</guid><description/></item></channel></rss>