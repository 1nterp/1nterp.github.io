<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Tech 🛠️ on InterP Blog</title><link>https://interp.blog/tech/</link><description>Recent content in Tech 🛠️ on InterP Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 18 Jan 2022 22:38:42 +0000</lastBuildDate><atom:link href="https://interp.blog/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo SCSS Rebuild</title><link>https://interp.blog/tech/2022-01-18-cka-exam-review/</link><pubDate>Tue, 18 Jan 2022 22:38:42 +0000</pubDate><guid>https://interp.blog/tech/2022-01-18-cka-exam-review/</guid><description>CKA (Certified K8s Administrator) 를 2021년 12월 말에 합격 통지를 받았다. 합격을 받고 나서 정리한 팁을 공유하고자 한다.
강의 매우 유명한 Udemy 의 Mumshard 강의를 완강했다. 내가 너무 초보여서 그런지는 몰라도, 기초 강의도 기본을 다지고 한번 더 리마인드 하자는 차원에서 완강을 했고, 결론적으로는 시험 뿐만 아니라 업무에도 큰 도움이 되고 있다.
이해가 쏙쏙 되는 강의 지속적인 업데이트 KodeCloud 를 통한 인터렉티브 연습 문제 (엄청 많다!) 3개의 모의고사 (요점은 다 나온다) 유료 (이긴 한데 상시 할인이라 큰 부담은 없다.</description></item><item><title>Hugo SCSS Rebuild</title><link>https://interp.blog/tech/2020-01-31-hugo-scss-rebuild/</link><pubDate>Fri, 31 Jan 2020 00:35:23 +0900</pubDate><guid>https://interp.blog/tech/2020-01-31-hugo-scss-rebuild/</guid><description>Hugo 에 포함된 Theme 에는 대부분 SASS/SCSS 파일로 스타일링을 했는데, 여기서 SCSS 내용을 변경해도 사이트 빌드할 때 변경 내용이 적용이 되지 않았다. 원칙적으론 되어야 한다. 어떻게 해결했는지 간단히 적어본다.</description></item><item><title>Visual Studio Code Remote Deployment</title><link>https://interp.blog/visual-studio-code-remote-deployment/</link><pubDate>Wed, 26 Jun 2019 05:11:21 +0000</pubDate><guid>https://interp.blog/visual-studio-code-remote-deployment/</guid><description>Vim 과 SSH 에 찌들어 있었는데, 이번 Visual Studio Code 의 베타 기능인 Remote Deployment 를 연결해 보고 나서, 학생 때 쓰던 IDE 로 돌아간 것 같아 너무 좋았다. 언제까지고 구식 도구를 쓰며 부심을 부릴 수만은 없다. 설치 과정이 조금 험난했지만, 간단히 요약해서 써본다.
클라이언트 OS 는 윈도우 10 (빌드 1809), 서버 OS 는 Cent OS 7 기준으로 작성한다.
클라이언트 (윈도우) 준비 처음에 준비할 때는 Visual Studio Code Insider 버전을 설치하라고 되어 있었는데, 이제는 꼭 그럴 필요 없는 것 같다.</description></item><item><title>공측도와 무리수</title><link>https://interp.blog/%EA%B3%B5%EC%B8%A1%EB%8F%84%EC%99%80-%EB%AC%B4%EB%A6%AC%EC%88%98/</link><pubDate>Sat, 27 Apr 2019 11:32:38 +0000</pubDate><guid>https://interp.blog/%EA%B3%B5%EC%B8%A1%EB%8F%84%EC%99%80-%EB%AC%B4%EB%A6%AC%EC%88%98/</guid><description>&amp;lsquo;알고리즘 산책&amp;rsquo; 책 요약이다. 까먹지 않으려고 정리한다.
최대공측도는 최대공약수 같은 개념이다. 선분 A와 B가 특정한 길이로 측정이 가능할 때, 이 길이 중 가장 긴 길이를 최대공측도라고 하는 것이다. 이 값을 구하는 코딩 역시 최대공약수 계산과 다르지 않다. 여기서 공측도 값이 되는 선분 길이는 자연수이다.
그런데 19세기 조지 크리스털이 증명한 것은, 정사각형의 변과 대각선의 변을 동시에 측정할 수 있는 선분은 없다는 것이다. 왜일까? 귀류법을 통해, 정사각형의 변과 대각선의 변을 동시에 측정할 수 있는 선분이 있다고 가정하면 된단다.</description></item><item><title>Windows SSH RSA Key 문제 해결</title><link>https://interp.blog/windows-ssh-rsa-key-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0/</link><pubDate>Mon, 18 Mar 2019 04:50:30 +0000</pubDate><guid>https://interp.blog/windows-ssh-rsa-key-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0/</guid><description>Windows Server 2016에서 OpenSSH 를 설치하고, cmd 에서 다음과 같이 RSA 키를 생성한다.
그러고 Public Key 를 SSH Server 에 위치한 authorized_keys 파일에 추가하고 접속을 시도하면?
오잉? 내 파일이 맞는데 이게 뭘까. Private Key 파일에 마우스 우클릭을 하고 봤더니 여러 사용자가 읽기 권한으로 걸려 있는 것을 확인할 수 있었다. 이건 아니다… 등록된 사용자를 전부 지우고 현재 사용자에게 모든 권한을 준 다음에, 확인을 눌러 권한 변경을 해 준다.
&amp;lsquo;편집&amp;rsquo; 에 가서 등록된 사용자를 지우려고 하면, 상속으로 인해 지울 수 없다는 괴상한 에러가 뜰 것이다.</description></item><item><title>Gitlab merge request 옵션 기본으로 두기</title><link>https://interp.blog/set-gitlab-merge-request-checked/</link><pubDate>Tue, 13 Nov 2018 05:03:22 +0000</pubDate><guid>https://interp.blog/set-gitlab-merge-request-checked/</guid><description>Gitlab Community 에서 필요로 하는 기능인데, 이렇게 수동으로 할 수 있어서 간단히 남긴다. Gitlab 에 있는 merge request 에 보면 다음 옵션이 있는데, 전부 체크가 해제되어 있다.
Merge Request 에 성공한 Source Branch 를 삭제 Merge Request 할 때 Commit 을 하나로 뭉쳐서 Merge (=Squash Merge) 이 체크박스를 개발자가 일일해 해 줘야 하는 문제가 있다. 그래서 어떤 개발자는 체크하는 것을 까먹었다가 master branch 의 commit tree 를 엉망으로 만들기도 한다.</description></item><item><title>Atomic Operation 으로 하는 동시성 제어</title><link>https://interp.blog/atomic-operation-%EC%9C%BC%EB%A1%9C-%ED%95%98%EB%8A%94-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%A0%9C%EC%96%B4/</link><pubDate>Tue, 24 Apr 2018 02:31:38 +0000</pubDate><guid>https://interp.blog/atomic-operation-%EC%9C%BC%EB%A1%9C-%ED%95%98%EB%8A%94-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%A0%9C%EC%96%B4/</guid><description>Test-And-Set (TAS) TAS 를 이용해서 간단한 동시성 제어를 할 수 있다. testAndSet 이라는 function 을 가지고 아래의 do...while 문을 쓰레드 A, B 에서 동시에 호출한다고 해 보자. 이 때 lock 은 같은 변수이다.
우선 TestAndSet() 은 다음과 같은 일을 한다. 말 그대로 &amp;lsquo;지금 값이 무엇인지 검사하고, 값을 바꾼다&amp;rsquo; 는 것이다.
lock의 현재 값을 저장해 둔다. lock의 값을 true 로 설정한다. 저장한 lock 의 값을 반환한다. 그럼 이걸로 어떻게 아래 block 의 critical section 에 대한 동시성 제어를 할 수 있을까?</description></item><item><title>Timsort</title><link>https://interp.blog/timsort/</link><pubDate>Mon, 23 Apr 2018 01:36:57 +0000</pubDate><guid>https://interp.blog/timsort/</guid><description>학부에서 알고리즘 수업을 들으면, 가장 빠른 정렬 알고리즘이 뭐냐는 질문에 쉽게 Quicksort 라고 답할 수 있겠다. 실제로 현업에서도 적용하기 가장 편하기 때문에 많이 차용되는 편이다. 그런데 모든 문제를 쉽게 풀 수 있는 은탄은 세상에 존재하지 않듯, Quicksort 역시 특정 케이스에서는 성능이 낮게 나오는 경우가 있다. 더 심각한(?) 것은, 이 특정 케이스가 현실에서는 꽤나 자주 발생한다는 것이다.
그 케이스란 바로 &amp;lsquo;거의 정렬된 데이터&amp;rsquo; 이다. 거의 정렬된 데이터라면 pivoting – partitioning 을 반복할 필요도 없이 Bubble Sort 나, 심지어는 Insertion Sort 를 해도 된다.</description></item><item><title>Powerpoint 에서 방향키 이동이 너무 느릴 때</title><link>https://interp.blog/powerpoint-%EC%97%90%EC%84%9C-%EB%B0%A9%ED%96%A5%ED%82%A4-%EC%9D%B4%EB%8F%99%EC%9D%B4-%EB%84%88%EB%AC%B4-%EB%8A%90%EB%A6%B4-%EB%95%8C/</link><pubDate>Mon, 12 Feb 2018 07:17:23 +0000</pubDate><guid>https://interp.blog/powerpoint-%EC%97%90%EC%84%9C-%EB%B0%A9%ED%96%A5%ED%82%A4-%EC%9D%B4%EB%8F%99%EC%9D%B4-%EB%84%88%EB%AC%B4-%EB%8A%90%EB%A6%B4-%EB%95%8C/</guid><description>방향키 이동이 너무 느리다기 보다는, 방향키 한 번 누를 때마다 개체가 1픽셀씩 이동하는 것 처럼 답답한 상황일 때 해결 방법이다.
보기 탭으로 표시 항목에서 &amp;lsquo;확장 아이콘&amp;rsquo;이 아주 작게 보인다. &amp;lsquo;눈금 및 안내선&amp;rsquo; 이란 제목의 창이 뜨며, 여기서 &amp;lsquo;개체를 눈금에 맞춰 이동&amp;rsquo; 을 클릭한다. 끝이다. 참고로 개체 이동 간격을 제어하려면 (3) 번에서 눈금 간격을 조정하면 된다!</description></item><item><title>gdb commands 이용하기</title><link>https://interp.blog/gdb-commands-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Tue, 06 Feb 2018 08:46:05 +0000</pubDate><guid>https://interp.blog/gdb-commands-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>gdb/ddd 에서 commands 를 사용하면 간편하게 breakpoint 의 상태를 출력할 수 있다. 물론 다양하게 응용이 가능하겠지만, 매뉴얼에서 제시한 케이스가 굉장히 편해서 따로 정리한다.
참고 : 매뉴얼
Breakpoint 상황을 출력하기 위 코드에서 if 문에 breakpoint 를 걸고, 할당받은 시작 주소와 그 크기를 보고자 한다. 한두번 발생하는 거라면 breakpoint 를 걸어 둔 다음 print 나 graph display (ddd 전용) 으로 띄워서 관찰하면 된다. 그런데 이게 100번 200번이면 하염없이 엔터를 치게 된다.
이럴 때 다음과 같이 입력한다.</description></item><item><title>Intel VTune Memory Bandwidth 분석하기</title><link>https://interp.blog/vtune-memory-bandwidth/</link><pubDate>Mon, 22 Jan 2018 05:19:48 +0000</pubDate><guid>https://interp.blog/vtune-memory-bandwidth/</guid><description>Intel VTune 으로 Memory Bandwidth 를 분석하려면, 분석할 수 있는 커널 드라이버를 로딩시켜야 한다. (참고로 메모리 분석은 리눅스에서만 가능하다.) 해당 작업을 하지 않고 &amp;lsquo;General Exploration &amp;gt; Analyze memory bandwidth&amp;rsquo; 를 체크하면 엄한 경고창이 반길 것이다.
이 문서를 참고해도 좋지만, VTune 이 설치된 경로에서 sepdk/src/README.txt 를 보는 게 더 쉽다. 이 내용을 요약하면,
커널 환경변수를 체크한다. 프로파일링이 가능하고 모듈 로딩이 가능해야 한다. CONFIG_MODULES=y CONFIG_MODULE_UNLOAD=y CONFIG_PROFILING=y 커널 드라이버를 컴파일시킬 헤더파일이 필요하다.</description></item><item><title>Office 2016 커서 애니메이션 끄기</title><link>https://interp.blog/office-2016-%EC%BB%A4%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%81%84%EA%B8%B0/</link><pubDate>Tue, 16 Jan 2018 12:14:29 +0000</pubDate><guid>https://interp.blog/office-2016-%EC%BB%A4%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%81%84%EA%B8%B0/</guid><description>Office 2016 부터인지 모르겠지만, 커서가 부드럽게 움직이는 애니메이션이 추가되었다. 실제 입력 속도는 같을지 모르겠는데, 문서 작업을 하고 있자니 조금 답답한 느낌이 들었다. 조금 느리게 입력되는 느낌?
그래서 이걸 끌 수 있는 방법을 두 가지 찾았는데, 하나는 레지스트리를 수정하는 것이라 귀찮았다. 다른 하나는 그 것보단 간단하다. 아래 스크린샷 순서대로 따라가 체크를 해제하면 된다.
제어판 &amp;gt; 시스템으로 들어간 다음, 고급 시스템 설정으로 들어간다. 고급 탭에서, 성능 항목에 &amp;lsquo;설정…&amp;rsquo; 을 클릭한다. &amp;lsquo;시각 효과&amp;rsquo; 탭에서, 창의 제어 및 요소에 애니메이션 효과 추가 항목의 체크를 해제한다.</description></item><item><title>Java Web Application 입문 (1) 준비운동</title><link>https://interp.blog/java-web-application-%EC%9E%85%EB%AC%B8-1-%EC%A4%80%EB%B9%84%EC%9A%B4%EB%8F%99/</link><pubDate>Tue, 09 Jan 2018 07:09:07 +0000</pubDate><guid>https://interp.blog/java-web-application-%EC%9E%85%EB%AC%B8-1-%EC%A4%80%EB%B9%84%EC%9A%B4%EB%8F%99/</guid><description>Java? 전통의 APM, Node.js 모두 한 걸음 정도는 자신있게 뗄 수 있는 (?) 수준이라고 생각하지만, 갑작스런 Java Web Application 도전이라니.
바깥 세상(?) 에선 아직도 Java 개발자를 찾는 것이 현실이다. 이제 그것을 대비하는 차원이다. Java 하나만 가지고 대부분의 어플리케이션 개발에 비빌 수 있기 때문이기도 하다. (개인적으로, 이런 대중성이 Java 개발자의 가치를 떨어뜨린다고 전혀 생각하지 않는다. Java 개발자는 많지만, 좋은 Java 개발자를 찾는 것은 전혀 다른 문제라고 생각하니까.)
입문서 구입 단순히 &amp;lsquo;Spring 기반으로 웹 어플리케이션을 만들어요&amp;rsquo; 라는 말만 듣고 Spring 입문서!</description></item><item><title>Gitlab 아바타/첨부파일 상대 경로 설정</title><link>https://interp.blog/gitlab-%EC%95%84%EB%B0%94%ED%83%80-%EC%83%81%EB%8C%80-%EA%B2%BD%EB%A1%9C-%EC%84%A4%EC%A0%95/</link><pubDate>Mon, 08 Jan 2018 02:35:20 +0000</pubDate><guid>https://interp.blog/gitlab-%EC%95%84%EB%B0%94%ED%83%80-%EC%83%81%EB%8C%80-%EA%B2%BD%EB%A1%9C-%EC%84%A4%EC%A0%95/</guid><description>Gitlab의 External_Url 을 실제 서버 주소와 다르게 설정할 때엔, 실제 nginx 에도 해당 도메인으로 접근할 수 있도록 설정해야 하는 게 맞다. 그렇지 않으면, 첨부파일과 아바타 이미지가 모두 깨져나온다. 하지만 그러기 전에 Gitlab 차원에서 상대 경로로 아바타를 출력할 수 있도록 수정하는 방법 &amp;lsquo;도&amp;rsquo; 있으니 편법으로 수정했다.
아바타 상대 경로 설정 /opt/gitlab/embedded/service/gitlab-rails/app/models/concerns/avatarable.rb 파일에서 절대 경로로 수정하는 코드가 있는데, url_base 에 덧붙이는 코드들을 전부 주석처리하면 된다.
당연히 gitlab-ctl reconfigure &amp;amp;&amp;amp; gitlab-ctl restart 를 해 줘야 한다.</description></item><item><title>Gitlab Markdown Parser 바꾸기</title><link>https://interp.blog/gitlab-markdown-parser-%EB%B0%94%EA%BE%B8%EA%B8%B0/</link><pubDate>Wed, 03 Jan 2018 02:29:21 +0000</pubDate><guid>https://interp.blog/gitlab-markdown-parser-%EB%B0%94%EA%BE%B8%EA%B8%B0/</guid><description>Git 기반 프로세스 도구인 Gitlab 은 오픈소스이기 때문에 Community Edition 을 쓰건, Enterprise Edition 을 쓰건 상관없이 맘대로 수정해서 사용이 가능하다. 물론 적절한 감(?)으로 수정할 곳을 찾아야 하는 번거로움은 있다. 여기서는 Gitlab에서 문서 작성에 필요한 Markdown 의 Parser 부분을 수정하기 위한 방법을 정리해 둔다. Ruby 개발자가 아니라서 전체 빌드 순서가 정공법처럼 보이진 않겠지만.
Gitlab의 Markdown Parser는 Redcarpet 을 사용한다. 아마 Jekyll 도 기본적으로 Redcarpet 을 사용하는 것으로 알고 있다. 만약 Ruby의 Redcarpet 을 Markdown Parser 로 쓰는 경우라면 똑같이 적용이 가능하다.</description></item><item><title>oh-my-zsh 색깔 고르기</title><link>https://interp.blog/oh-zsh-%EC%83%89%EA%B9%94-%EA%B3%A0%EB%A5%B4%EA%B8%B0/</link><pubDate>Wed, 13 Dec 2017 05:43:01 +0000</pubDate><guid>https://interp.blog/oh-zsh-%EC%83%89%EA%B9%94-%EA%B3%A0%EB%A5%B4%EA%B8%B0/</guid><description>oh-my-zsh 테마 작업을 agnoster 를 기반으로 고쳐서 사용 중이다. 그런데 주석을 보면 다음 색깔만 지원하는 것 처럼 나온다.
white, black, red, blue, green, yellow, cyan, magenta 사전에 정의된 것 외의 색상을 설정하려면, 다음 작업이 필요하다.
터미널 종류가 xterm-256color 여야 한다. (xterm 이면 색깔을 정해도 제대로 출력이 안된다.)
oh-my-zsh 에서, %{%K{123}%} 또는 %{%F{123}%} 를 가지고 색깔을 찾는다.
이 때 123 대신 0~255 를 입력한다.
0~255 숫자와 대응되는 색상을 찾아야 하는데, 여기를 참고하면 도움이 된다.</description></item><item><title>X11 on Windows Linux Subsystem</title><link>https://interp.blog/x11-windows-linux-subsystem/</link><pubDate>Wed, 29 Nov 2017 08:32:52 +0000</pubDate><guid>https://interp.blog/x11-windows-linux-subsystem/</guid><description>제목은 다음 내용을 포함하고 있다.
Windows 10 에서 지원하는 Linux Subsystem 기능에 대해 이야기한다. 잘 모르겠다면 이 글을 읽고 설치에 도전해 보자. 그런데 글 내용을 보면 이거랑 관련 없다. Babun, Mintty, Git on Bash, Putty 전부 포함이다 SSH에 접속한 서버에서 X11 Forwarding 을 받고 싶은 경우를 이야기한다. 단적으로, 접속한 서버에서 파이어폭스 브라우저를 실행하면 내 윈도우 화면에 브라우저 창이 실행되는 거다. 이걸 따로 이야기하고 싶지 않으니 Xming 이나 VcXsrv (추천) 을 참고해 설치해보자.</description></item><item><title>C# xUnit 실습</title><link>https://interp.blog/c-xunit-%EC%8B%A4%EC%8A%B5/</link><pubDate>Wed, 29 Nov 2017 03:28:03 +0000</pubDate><guid>https://interp.blog/c-xunit-%EC%8B%A4%EC%8A%B5/</guid><description>졸업프로젝트도 아니고, 기말고사 대신 치룬 텀프로젝트의 마지막을 장식할 윈도우 어플리케이션을 만들기 위해 배우려 했으나 문 앞에서 서성이기만 했던 바로 그 언어, C#을 당장 써먹어야 하는 상황이 발생했다. (이런 상황이 발생한 것이 참 안타깝긴 하지만) 배움의 기회로 삼는 수 밖에 없다.
dotnet test 및 xUnit을 사용하여 .NET Core에서 C# 유닛 테스트라는 MS 문서를 기반으로 실습을 했는데, 여기서 중요한 것은, 내가 만들어야 하는 라이브러리의 Target Framework가 .NET Core 가 아니라 .NET Framework 4.</description></item><item><title>Gitlab 삽질기</title><link>https://interp.blog/gitlab-%EC%82%BD%EC%A7%88%EA%B8%B0/</link><pubDate>Wed, 15 Nov 2017 09:17:58 +0000</pubDate><guid>https://interp.blog/gitlab-%EC%82%BD%EC%A7%88%EA%B8%B0/</guid><description>Upgrade 8.x 로 쓰다가 10.x 로 업그레이드를 진행했다. 아니.. 그런데 Postgresql Database 버전이 다르다고? 알고보니 이렇게 대격변을 일으키면 안 되던 거였다. 그래서 겸사겸사 9.5.10 으로 다시 설치하니까 된다.
gitlab-ctl reconfigure 를 설치 직후에 반드시 해 줘야 한다. 가끔 gitlab-ctl pg-upgrade 를 꼭 하라는 말이 있던데, 내가 해보니까 gitlab-ctl reconfigure 할 때 알아서 한다 (…) 했던 거 또 하는 느낌. gitlab-ctl restart 를 할 때 postgresql 이나 다른 곳에서 &amp;lsquo;down, up, want up&amp;rsquo; 이런 게 뜨면 서비스가 온전히 수행될 수 없는 상황이다.</description></item><item><title>Linux 에서 CPU/Memory/Disk 확인</title><link>https://interp.blog/linux-%EC%97%90%EC%84%9C-cpumemorydisk-%ED%99%95%EC%9D%B8/</link><pubDate>Mon, 30 Oct 2017 08:31:03 +0000</pubDate><guid>https://interp.blog/linux-%EC%97%90%EC%84%9C-cpumemorydisk-%ED%99%95%EC%9D%B8/</guid><description>자주 쓰긴 하지만, 곧바로 생각나지 않을 것을 대비해서… 서버실 서버 사양을 전부 체크하려다 보니 어쩔 수 없이 정리했다.
CPU / Memory 확인 CPU / Memory 는 사실 쉽다. /proc/cpuinfo 와 /proc/meminfo 안에 들어있기 때문이다.
Disk 확인 df 는 mount 된 것만 확인이 가능해서 별로고, lsblk 를 하면 마운트되지 않은 것까지 나온다.</description></item><item><title>mmap : 메모리를 파일처럼</title><link>https://interp.blog/mmap-%EB%A9%94%EB%AA%A8%EB%A6%AC%EB%A5%BC-%ED%8C%8C%EC%9D%BC%EC%B2%98%EB%9F%BC/</link><pubDate>Wed, 20 Sep 2017 13:29:57 +0000</pubDate><guid>https://interp.blog/mmap-%EB%A9%94%EB%AA%A8%EB%A6%AC%EB%A5%BC-%ED%8C%8C%EC%9D%BC%EC%B2%98%EB%9F%BC/</guid><description>mmap은 memory map 의 줄임말이다. 메모리의 특정 영역을 파일 디스크립터로 인식하게 만드는 것이다.
map or unmap files or devices into memory
메모리 영역을 파일이나 디바이스로 인식하게 합니다
– manpage of mmap
사용 여기서 의미가 있는 건 Length, Prot (Protection), Flag 뿐이다.
Start 는, Kernel이 아무 곳이나 지정해도 좋다면 NULL을 입력한다. Offset 은, 보통 0으로 둔다. (MAP_ANONYMOUS 또는 MAP_ANON Flag가 있는 경우엔 무시된다) Fd 는, 연결할 파일 디스크립터를 지정한다.</description></item><item><title>polylang 사용 팁</title><link>https://interp.blog/polylang-%EC%82%AC%EC%9A%A9-%ED%8C%81/</link><pubDate>Wed, 06 Sep 2017 05:22:27 +0000</pubDate><guid>https://interp.blog/polylang-%EC%82%AC%EC%9A%A9-%ED%8C%81/</guid><description>다국어 사이트를 기획하던 중에 만난 Polylang 이 괜찮은 것 같아서 사용 중인데, 설정 중에 만난 두 가지 문제들을 아래와 같이 해결했다.
Language Switcher가 없다고? **외모 – 메뉴 **에서 오른쪽 위에 &amp;lsquo;화면 옵션&amp;rsquo; 을 펼치면 Language Switcher 가 꺼져있을 것이다. String Translation 을 따로 추가하고 싶다고? 테마의 functions.php 에서pll_register_string() 함수를 호출하면 된다. 해당 String 을 사용하고 싶다면 테마에서 pll__또는 pll__e 를 사용하면 된다.자세한 내용은 여기를 참고.</description></item><item><title>pthread_yield vs. sleep</title><link>https://interp.blog/pthread_yield-vs-sleep/</link><pubDate>Thu, 24 Aug 2017 05:35:24 +0000</pubDate><guid>https://interp.blog/pthread_yield-vs-sleep/</guid><description>pthread_yield() 와 sleep() 의 차이를 묻는 Stack Overflow 글을 가져와 봤다.
pthread_yield() 는, 호출한 쓰레드가 프로세서 사용을 그만두고, 스케쥴링이 될 때 까지 작업 큐(run queue)에서 기다립니다. 만약 호출되었을 때 작업 큐가 비어 있다면, 즉시 스케쥴링이 되겠죠.
sleep() 은 X초만큼 지나거나, 무시할 수 없는 시그널이 도착할 때 까지 (다른 쓰레드를 포함한) 호출 프로세스를 재웁니다.
현재 쓰레드를 실제로 지연시키고 싶지 않지만 (호출 쓰레드 대신) 다른 쓰레드에게 실행권을 넘겨주고 싶은 경우라면, sleep() 보단 pthread_yield() 가 적합할 것 같습니다.</description></item></channel></rss>