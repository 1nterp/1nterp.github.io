<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gitlab on InterP Blog</title><link>https://interp.blog/tags/gitlab/</link><description>Recent content in gitlab on InterP Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 13 Nov 2018 05:03:22 +0000</lastBuildDate><atom:link href="https://interp.blog/tags/gitlab/index.xml" rel="self" type="application/rss+xml"/><item><title>Gitlab merge request 옵션 기본으로 두기</title><link>https://interp.blog/set-gitlab-merge-request-checked/</link><pubDate>Tue, 13 Nov 2018 05:03:22 +0000</pubDate><guid>https://interp.blog/set-gitlab-merge-request-checked/</guid><description>&lt;p>Gitlab Community 에서 필요로 하는 기능인데, 이렇게 수동으로 할 수 있어서 간단히 남긴다. Gitlab 에 있는 merge request 에 보면 다음 옵션이 있는데, 전부 체크가 해제되어 있다.&lt;/p>
&lt;p>&lt;img src="https://interp.blog/uploads/2018/11/%ec%a0%9c%eb%aa%a9-%ec%97%86%ec%9d%8c.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>Merge Request 에 성공한 Source Branch 를 삭제&lt;/li>
&lt;li>Merge Request 할 때 Commit 을 하나로 뭉쳐서 Merge (=Squash Merge)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>이 체크박스를 개발자가 일일해 해 줘야 하는 문제&lt;/strong>가 있다. 그래서 어떤 개발자는 체크하는 것을 까먹었다가 master branch 의 commit tree 를 엉망으로 만들기도 한다. 이 문제를 그냥 없애기 위해, 체크박스 표시를 그대로 두도록 하면 어떨까 고민하던 차에, 해결방법을 알아냈다.&lt;/p>
&lt;ol>
&lt;li>&lt;code>/opt/gitlab/embedded/service/gitlab-rails/app/views/shared/issuable/form/_merge_params.html.haml&lt;/code> 을 편집기로 연다.&lt;/li>
&lt;li>&lt;code>check_box_tag&lt;/code> 항목으로 시작하는 줄이 &lt;span style="text-decoration: underline;">두 군데&lt;/span> 있는데, 아래와 같이 다음 내용을 &amp;lsquo;추가&amp;rsquo; 한다.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">= check_box_tag &amp;#39;merge_request[force_remove_source_branch]&amp;#39;, &amp;#39;1&amp;#39;, issuable.force_remove_source_branch?, class: &amp;#39;form-check-input&amp;#39;&amp;lt;span style=&amp;#34;color: #ff0000;&amp;#34;&amp;gt;, checked: &amp;#39;checked&amp;#39;&amp;lt;/span&amp;gt;
&amp;lt;span style=&amp;#34;color: #0000ff;&amp;#34;&amp;gt;# ... blahblah&amp;lt;/span&amp;gt;
= check_box_tag &amp;#39;merge_request[squash]&amp;#39;, &amp;#39;1&amp;#39;, issuable.squash, class: &amp;#39;form-check-input&amp;#39;&amp;lt;span style=&amp;#34;color: #ff0000;&amp;#34;&amp;gt;, checked: &amp;#39;checked&amp;#39;&amp;lt;/span&amp;gt;```
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>다 했다면 &lt;code>gitlab-ctl reconfigure &amp;amp;&amp;amp; gitlab-ctl restart&lt;/code> 로 Gitlab 서버를 재시작한다.&lt;/p></description></item><item><title>Gitlab 아바타/첨부파일 상대 경로 설정</title><link>https://interp.blog/gitlab-%EC%95%84%EB%B0%94%ED%83%80-%EC%83%81%EB%8C%80-%EA%B2%BD%EB%A1%9C-%EC%84%A4%EC%A0%95/</link><pubDate>Mon, 08 Jan 2018 02:35:20 +0000</pubDate><guid>https://interp.blog/gitlab-%EC%95%84%EB%B0%94%ED%83%80-%EC%83%81%EB%8C%80-%EA%B2%BD%EB%A1%9C-%EC%84%A4%EC%A0%95/</guid><description>&lt;p>사내 사정으로 인해 Gitlab의 &lt;code>External_Url&lt;/code> 을 실제 서버 주소와 다르게 설정해서 쓰고 있다.&lt;/p>
&lt;p>물론 실제 nginx 에도 해당 도메인으로 접근할 수 있도록 설정해야 하는 게 맞다. 그렇지 않으면, 첨부파일과 아바타 이미지가 모두 깨져나온다. 하지만 그러기 전에 Gitlab 차원에서 상대 경로로 아바타를 출력할 수 있도록 수정하는 방법 &amp;lsquo;도&amp;rsquo; 있으니 편법으로 수정했다. 아래는 그 편법 내용을 다룬다.&lt;/p>
&lt;h2 id="아바타-상대-경로-설정">아바타 상대 경로 설정&lt;/h2>
&lt;p>&lt;code>/opt/gitlab/embedded/service/gitlab-rails/app/models/concerns/avatarable.rb&lt;/code> 파일에서 절대 경로로 수정하는 코드가 있는데, url_base 에 덧붙이는 코드들을 전부 주석처리하면 된다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">module&lt;/span> &lt;span class="nn">Avatarable&lt;/span>
&lt;span class="kp">extend&lt;/span> &lt;span class="no">ActiveSupport&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Concern&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">avatar_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">only_path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="k">unless&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:avatar&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">present?&lt;/span>
&lt;span class="n">asset_host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">ActionController&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Base&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">asset_host&lt;/span>
&lt;span class="n">use_asset_host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asset_host&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">present?&lt;/span>
&lt;span class="c1"># Avatars for private and internal groups and projects require authentication to be viewed,&lt;/span>
&lt;span class="c1"># which means they can only be served by Rails, on the regular GitLab host.&lt;/span>
&lt;span class="c1"># If an asset host is configured, we need to return the fully qualified URL&lt;/span>
&lt;span class="c1"># instead of only the avatar path, so that Rails doesn&amp;#39;t prefix it with the asset host.&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">use_asset_host&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">respond_to?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:public?&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="kp">public&lt;/span>&lt;span class="p">?&lt;/span>
&lt;span class="n">use_asset_host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">false&lt;/span>
&lt;span class="n">only_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kp">false&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">url_base&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="c1"># if use_asset_host&lt;/span>
&lt;span class="c1"># url_base &amp;lt;&amp;lt; asset_host unless only_path&lt;/span>
&lt;span class="c1"># else&lt;/span>
&lt;span class="c1"># url_base &amp;lt;&amp;lt; gitlab_config.base_url unless only_path&lt;/span>
&lt;span class="c1"># url_base &amp;lt;&amp;lt; gitlab_config.relative_url_root&lt;/span>
&lt;span class="c1"># end&lt;/span>
&lt;span class="n">url_base&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">avatar&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>당연히 &lt;code>gitlab-ctl reconfigure &amp;amp;&amp;amp; gitlab-ctl restart&lt;/code> 를 해 줘야 한다.&lt;/p>
&lt;p>참고 : &lt;a class="link" href="https://gitlab.com/gitlab-org/gitlab-ce/merge" target="_blank" rel="noopener"
>https://gitlab.com/gitlab-org/gitlab-ce/merge&lt;/a>_requests/11001/diffs#note_28659864&lt;/p>
&lt;h2 id="첨부파일-상대-경로-설정">첨부파일 상대 경로 설정&lt;/h2>
&lt;p>단서가 없어서 맨땅에 헤딩하듯이 뒤지고 다녔다. Markdown 언어에서 링크를 담당하는 라이브러리가 있는데, 이름이 &amp;lsquo;&lt;strong>banzai&lt;/strong>&amp;rsquo; 이다 (…) &lt;span style="color: #808080;">&lt;del>무슨 생각으로 이름을 지은건지 도저히 모르겠지만&lt;/del>&lt;/span> 여기를 수정해야 한다.&lt;/p>
&lt;p>&lt;code>filter/upload_link_filter.rb&lt;/code> 를 보면, &lt;code>build_url()&lt;/code> 이란 함수가 있다. 여기서 Geo node 여부에 따라 base_path 를 설정하는 코드가 있는데, 여기서 원하는 내부 주소로 변경하면 된다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="k">def&lt;/span> &lt;span class="nf">build_url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">base_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="no">Gitlab&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Geo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">secondary?&lt;/span>
&lt;span class="no">Gitlab&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Geo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">primary_node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="c1"># Gitlab.config.gitlab.url&lt;/span>
&lt;span class="s2">&amp;#34;http://your.address.com/&amp;#34;&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">group&lt;/span>
&lt;span class="n">urls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">Gitlab&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">Routing&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url_helpers&lt;/span>
&lt;span class="c1"># we need to get last 2 parts of the uri which are secret and filename&lt;/span>
&lt;span class="n">uri_parts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="no">File&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="no">SEPARATOR&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">file_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">urls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show_group_uploads_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">uri_parts&lt;/span>&lt;span class="o">[-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">uri_parts&lt;/span>&lt;span class="o">[-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">base_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">base_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">project&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">full_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Gitlab 11 버전 으로 업그레이드 되면서부터 해당 파일은 삭제되고, &lt;code>absolute_link_filter.rb&lt;/code> 와 &lt;code>external_link_filter.rb&lt;/code> , &lt;code>relative_link_filter.rb&lt;/code> 가 남아있다. 여기 있는 &lt;code>Gitlab.config.gitlab.url&lt;/code> 을 원하는 주소로 바꿔주면 가능하다. (relative.rb 의 경우 &lt;code>Gitlab.config.gitlab.base_url&lt;/code>)&lt;/p></description></item><item><title>Gitlab Markdown Parser 바꾸기</title><link>https://interp.blog/gitlab-markdown-parser-%EB%B0%94%EA%BE%B8%EA%B8%B0/</link><pubDate>Wed, 03 Jan 2018 02:29:21 +0000</pubDate><guid>https://interp.blog/gitlab-markdown-parser-%EB%B0%94%EA%BE%B8%EA%B8%B0/</guid><description>&lt;p>Github 과 비슷한 서비스인 &lt;a class="link" href="https://about.gitlab.com/" target="_blank" rel="noopener"
>Gitlab&lt;/a> 은 오픈소스이기 때문에 Community Edition 을 쓰건, Enterprise Edition 을 쓰건 on-premise 환경에서 설치한 뒤 맘대로 수정해서 사용이 가능하다. (물론 EE 는 라이센스가 필요하다) 수정하는 범위를 한정하지 않는다면, 일개 루비 (&lt;code>*.rb&lt;/code>) 파일까지 건드릴 수 있다.&lt;/p>
&lt;p>여기서는 Gitlab에서 문서 작성에 필요한 Markdown 의 Parser 부분을 미세하게 수정해서, 입맛에 맞게 바꾸기 위한 트윅을 정리해 둔다. Ruby 개발자가 아니라서 전체 순서가 정공법처럼 보이진 않겠지만.&lt;/p>
&lt;p>수정 내용은 다음과 같다. 원래 Markdown 문법에선 Enter 키를 두 번 치면 문단 바꿈, 줄 끝에 스페이스를 두 번 넣으면 줄바꿈이 된다. &lt;strong>그런데 Enter 키를 한 번만 쳐도 줄바꿈이 되면 좋겠다는 개발자가 많았다.&lt;/strong> &lt;del>님 Markdown 안 써보셨어요? 라고 따질 순 없었다.&lt;/del>&lt;/p>
&lt;h2 id="gitlab-10x--redcarpet">Gitlab 10.x : Redcarpet&lt;/h2>
&lt;p>Gitlab 10.x 에서는 Markdown Parser 를 &lt;a class="link" href="https://github.com/vmg/redcarpet" target="_blank" rel="noopener"
>Redcarpet&lt;/a> 으로 사용한다. 아마 &lt;a class="link" href="https://jekyllrb-ko.github.io/" target="_blank" rel="noopener"
>Jekyll&lt;/a> 도 기본적으로 Redcarpet 을 사용하는 것으로 알고 있다. 만약 Ruby의 Redcarpet 을 Markdown Parser 로 쓰는 경우라면 똑같이 적용이 가능하다.&lt;/p>
&lt;h3 id="parser-c-파일-수정하기">Parser C 파일 수정하기&lt;/h3>
&lt;p>&lt;code>/opt/gitlab/embedded/lib/ruby/gems/2.3.0/gems/redcarpet-3.4.0/&lt;/code> 으로 들어가면 Redcarpet의 소스코드가 존재한다. 여기서 &lt;code>ext/redcarpet&lt;/code> 디렉토리가 Parser C 파일들이 위치한 곳이다.&lt;/p>
&lt;p>내가 수정하고 싶은 것은 &amp;lsquo;&lt;strong>엔터 키를 두번 쳐야 (혹은 줄 끝에 스페이스를 2개 이상 줘야) 줄바꿈이 되는 불편함&lt;/strong>&amp;rsquo; 을 해소하고 싶었다. &lt;code>markdown.c&lt;/code> 파일을 보니 &lt;code>char_linebreak()&lt;/code>  라는 함수가 존재한다. 여기서 해당 부분을 주석처리했다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cm">/* char_linebreak • &amp;#39;\n&amp;#39; preceded by two spaces (assuming linebreak != 0) */&lt;/span>
&lt;span class="k">static&lt;/span> &lt;span class="n">size_t&lt;/span>
&lt;span class="nf">char_linebreak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">buf&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ob&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="nc">sd_markdown&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">rndr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">uint8_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size_t&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="c1">//if (offset &amp;lt; 2 || data[-1] != &amp;#39; &amp;#39; || data[-2] != &amp;#39; &amp;#39;)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// return 0; /* removing the last space from ob and rendering */
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ob&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ob&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ob&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="sc">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ob&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">rndr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">cb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">linebreak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ob&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rndr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">opaque&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="라이브러리-생성복사">라이브러리 생성/복사&lt;/h3>
&lt;p>수정이 끝나면 반드시 &lt;code>ext/redcarpet&lt;/code> 디렉토리에서 &lt;code>make&lt;/code> 를 수행해 주도록 하자. 그러면 Shared Library 파일인 &lt;code>redcarpet.so&lt;/code> 이 생성된다.&lt;/p>
&lt;p>이 파일을, 다음 경로에 모두 복사해주도록 하자.&lt;/p>
&lt;ul>
&lt;li>&lt;code>/opt/gitlab/embedded/lib/ruby/gems/2.3.0/extensions/x86_64-linux/2.3.0/redcarpet-3.4.0/&lt;/code>&lt;/li>
&lt;li>&lt;code>/opt/gitlab/embedded/lib/ruby/gems/2.3.0/gems/redcarpet-3.4.0/lib/&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="gitlab-재부팅">Gitlab 재부팅&lt;/h3>
&lt;p>대망의 재부팅이 남았다.&lt;/p>
&lt;p>&lt;code>gitlab-ctl reconfigure &amp;amp;&amp;amp; gitlab-ctl restart&lt;/code> 를 실행시키면 반영이 된다!&lt;/p>
&lt;p> &lt;/p>
&lt;h2 id="gitlab-11x-이후--commonmark">Gitlab 11.x 이후 : Commonmark&lt;/h2>
&lt;p>11.x 부터는 Redcarpet 이 아니라 Commonmark 를 기본 파서로 사용한다. 구조가 달라져서 찾는게 귀찮아서 그렇지, 기본 원리는 비슷하다. 2칸 이상의 space 를 준 채로 줄바꿈하게 되면 &lt;code>CMARK_NODE_LINEBREAK&lt;/code>, 그렇지 않고 줄바꿈하면 &lt;code>CMARK_NODE_SOFTBREAK&lt;/code> 상태로 전이된다.&lt;/p>
&lt;p>옵션을 쓸 수 있다면 좋겠지만, 본인은 마음이 급한지라 참고할 만한 소스코드만 붙이고 도망가도록 한다. &lt;code>html.c:283&lt;/code> 부터다. 여기서 직접 line break 를 하도록 강제했다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="k">case&lt;/span> &lt;span class="nl">CMARK_NODE_SOFTBREAK&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">amp&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">CMARK_OPT_HARDBREAKS&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cmark_strbuf_puts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;lt;br/&amp;gt;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">amp&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">CMARK_OPT_NOBREAKS&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// cmark_strbuf_putc(html, &amp;#39; &amp;#39;); // 수정 전
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">cmark_strbuf_puts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;lt;br/&amp;gt;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 수정 후
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cmark_strbuf_putc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sc">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이렇게 하고 make 를 치면.. 어? 빌드가 안 된다.&lt;/p>
&lt;p>당황하지 말고, &lt;del>이름 때문에 보기 싫지만&lt;/del> banzai filter 가 위치한 곳의 ruby 파일을 수정하면 된다. 여기에서 사실 옵션 조절이 가능하다. 파일 위치는 &lt;code>/opt/gitlab/embedded/service/gitlab-rails/lib/banzai/filter/markdown_engines/common_mark.rb&lt;/code> 이다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="no">RENDER_OPTIONS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>
&lt;span class="ss">:DEFAULT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># default rendering system. Nothing special.&lt;/span>
&lt;span class="ss">:HARDBREAKS&lt;/span> &lt;span class="c1"># Treat `\n` as hardbreaks (by adding `&amp;lt;br/&amp;gt;`). # 이걸 추가한다.&lt;/span>
&lt;span class="o">].&lt;/span>&lt;span class="n">freeze&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>반드시, Gitlab 재부팅을 잊지말자!&lt;/p>
&lt;p>한 가지 아쉬운 점은(?) 일부러 soft break 를 시도하는 경우에, 내부에서 line break 까지 겹쳐서 인식하기 때문에 결론적으로 &lt;code>&amp;lt;br/&amp;gt;&lt;/code> 이 두번 붙는 사태가 일어난다. 어쩔 수 없이 commonmark 를 한번 빌드하는 수밖에 없나.. 하는 생각이 들고 있다.&lt;/p></description></item><item><title>Gitlab 10.x 삽질기</title><link>https://interp.blog/gitlab-%EC%82%BD%EC%A7%88%EA%B8%B0/</link><pubDate>Wed, 15 Nov 2017 09:17:58 +0000</pubDate><guid>https://interp.blog/gitlab-%EC%82%BD%EC%A7%88%EA%B8%B0/</guid><description>&lt;h2 id="upgrade">Upgrade&lt;/h2>
&lt;p>8.x 로 쓰다가 10.x 로 업그레이드를 진행했다. 아니.. 그런데 Postgresql Database 버전이 다르다고? 알고보니 이렇게 대격변을 일으키면 안 되던 거였다. 그래서 겸사겸사 9.5.10 으로 다시 설치하니까 된다.&lt;/p>
&lt;ul>
&lt;li>&lt;code>gitlab-ctl reconfigure&lt;/code> 를 설치 직후에 반드시 해 줘야 한다.&lt;/li>
&lt;li>가끔 &lt;code>gitlab-ctl pg-upgrade&lt;/code> 를 꼭 하라는 말이 있던데, 내가 해보니까 &lt;code>gitlab-ctl reconfigure&lt;/code> 할 때 알아서 한다 (…) 했던 거 또 하는 느낌.&lt;/li>
&lt;li>&lt;code>gitlab-ctl restart&lt;/code> 를 할 때 postgresql 이나 다른 곳에서 &amp;lsquo;down, up, want up&amp;rsquo; 이런 게 뜨면 서비스가 온전히 수행될 수 없는 상황이다. &lt;code>gitlab-ctl tail&lt;/code> 을 실행시켜 로그를 뒤져봐야 한다. 에러가 났거나, 무한히 반복되는 메시지가 없는지 확인하자.&lt;/li>
&lt;/ul>
&lt;h2 id="runner">Runner&lt;/h2>
&lt;p>우리 회사 Gitlab 구조는 웹 서비스 주소와 내부 공유 주소가 다르다. (도메인을 거의 리다이렉트 비슷하게 해놨기 때문이기도 하지만) 비공개 저장소다 보니, 웹 접속은 외부에서 되었면서 Clone 은 똑같은 주소로 절대 받을 수 없게 해 놨다. 이게 Gitlab Runner 를 바보로 만들었다 (…)&lt;/p>
&lt;p>Gitlab Runner는 &lt;code>.gitlab-ci.yml&lt;/code> 의 구성에 상관없이, 선작업으로 해당 저장소를 Cloning 하거나 Fetching 하게 된다. (양자택일은 웹 페이지의 Runner 관리 페이지에서 설정이 가능하다.) 이건 Runner의 Executer를 Docker를 하던 Shell 을 하던 똑같다. 문제는 내가 언급했던 대로, 이 저장소 주소를 웹 주소에 기반해서 가져가기 때문에, 항상 실패했다는 것이다.&lt;/p>
&lt;p>짜증이 치밀 즈음, 아예 이 작업을 끌 수는 없을까 하고 봤더니… 역시나 답은 있었다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">variables:
GIT_STRATEGY: none
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이렇게 두면, Runner의 옵션을 Cloning 으로 줬건 Fetching 으로 줬건 간에 &lt;strong>하지 않는다&lt;/strong>.&lt;/p>
&lt;p>즉, 모든 작업을 온전히 CI 명령에 맡기는 것이다. 위험하기도 하고, 캐싱도 안 되고 약점이 많지만, 나는 상관이 없었다. 직접 내부 주소의 저장소로 접근해서 받아오면 그만!&lt;/p>
&lt;h3 id="repository-에-ssh-key-등록">Repository 에 SSH Key 등록&lt;/h3>
&lt;p>그런데, 문제가 생겼다. 아래와 같이 &amp;lsquo;gitlab-runner&amp;rsquo; 사용자로 Runner Service를 등록하고, 실행시켰다고 가정하자.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">gitlab-runner install --user gitlab-runner
gitlab-runner start
ps aux &lt;span class="p">|&lt;/span> grep gitlab-runner &lt;span class="c1"># gitlab-runner run 이 잘 되고 있어야 한다.&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>나는 Executer를 Shell 로 쓰고 있는데, 이 친구가 내부 저장소로 (그것도 SSH 주소로) 접근하려면… SSH Public Key를 넣어줘야 된다. 넣지 않으면 인증에서 실패한다. 그런데 Gitlab Runner 의 Shell 사용자는 위에서 보이는 것 처럼 &amp;lsquo;gitlab-runner&amp;rsquo; 인데.. 얘는 Gitlab 계정도 없는 가상 사용자다. 어떻게 Public Key를 등록할까?&lt;/p>
&lt;p>Gitlab은, 각 사용자 계정의 SSH Public Key를 관리해 주기도 하지만 Project 별로 SSH Key를 등록할 수도 있다. &lt;em>Project 페이지의 Settings &amp;gt; Repository&lt;/em> 에서 Deploy Keys 부분을 펼쳐보자. 그러면 익숙한 SSH Key 등록 폼이 나온다. 여기에, 아까 언급한 &amp;lsquo;gitlab-runner&amp;rsquo; 의 SSH Key를 등록하면 된다. (당연히 gitlab-runner 계정에서 SSH Key 생성을 해야한다.)&lt;/p>
&lt;p>그러면&lt;code>.gitlab-ci.yml&lt;/code> 에 마구잡이로 &lt;code>'git clone git@~~~~:&amp;lt;user or group&amp;gt;/&amp;lt;project&amp;gt;.git'&lt;/code> 이런 식으로 스크립트를 적어도 아주 잘 clone 되는 걸 확인할 수 있다!&lt;/p>
&lt;h2 id="create-new-branch-의-기본-branch-바꾸기">&lt;em>Create New Branch&lt;/em> 의 기본 Branch 바꾸기&lt;/h2>
&lt;p>Issue 페이지에서 Create New Branch (9.x 에서는 New Branch) 를 하면, Branch의 이름이 &amp;lsquo;421 – invalid table error&amp;rsquo; 이런 식으로 뜬다. 이슈 번호와 이슈 제목.&lt;/p>
&lt;p>그런데 내부적으로는 이슈 제목에 한글을 많이 써서 Branch 이름을 출력하고 싶지 않았다. 그리고 규격화된 이름 (ISSUE#XXXX) 으로 Branch를 생성하고픈 욕구가 치밀었다. (참고로 Push Rule 에서 Branch Naming Rule에 저렇게 규칙을 쓰고, Create New Branch 를 누르면 절대로 Branch가 생기지 않는다.)&lt;/p>
&lt;p>Gitlab에 이미 &lt;a class="link" href="https://gitlab.com/gitlab-org/gitlab-ce/issues/21143" target="_blank" rel="noopener"
>#21143&lt;/a> 으로 이슈가 등록되었고, 10.3 에서 업데이트가 된다지만… 이렇게 되면 사용자가 매번 Push Rule을 피하려고 Branch 이름을 일일이 쳐넣는 어처구니없는 상황이 계속된다. 그래서 코드를 찾아내서 고치는 편이 낫다고 생각했다.&lt;/p>
&lt;p>Ruby는 쥐뿔도 모르지만 코드는 코드일 뿐.&lt;/p>
&lt;p>이슈에 대한 브랜치를 생성하는 작업은 &lt;a class="link" href="https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/2808/diffs" target="_blank" rel="noopener"
>이 Merge Request&lt;/a> 에서 반영된 것이다. 여기 Diff를 쭉 봤더니 &lt;code>to_branch_name&lt;/code> 이 눈에 띈다. 오호라. 하지만 어디서 수정해야 할까?&lt;/p>
&lt;p>Gitlab을 Omnibus 로 정직하게 설치했다면 소스코드 경로는 &lt;code>/opt/gitlab/embedded/service/gitlab-rails/&lt;/code> 에 있다. 여기서 grep으로 &lt;code>to_branch_name&lt;/code> 을 검색해 보면?&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">cd&lt;/span> /opt/gitlab/embedded/service/gitlab-rails/
grep to_branch_name . -rn
&lt;span class="c1"># ./embedded/service/gitlab-rails/app/models/issue.rb:XXX def to_branch_name&lt;/span>
&lt;span class="c1"># 이하 생략&lt;/span>
vi app/models/issue.rb
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>여기서 &lt;code>&amp;quot;#{iid}-#{title.parameterize}&amp;quot;&lt;/code> 라고 정의된 부분을 적절히 바꿔주자. 나는 &lt;code>&amp;quot;ISSUE##{iid}&amp;quot;&lt;/code> 로 심플하게 바꿨다.&lt;/p>
&lt;p>이것만 바꾸면 &amp;lsquo;Create New Branch&amp;rsquo; 를 누를 때 잘 될 것 같다. 하지만 Issue 페이지에서 &amp;lsquo;연관된 Issue Branch&amp;rsquo; 목록에 연결되지 않는다. 수정한 파일 &lt;code>/opt/gitlab/embedded/service/gitlab-rails/app/models/issue.rb&lt;/code> 에서, 더 수정할 것이 남아있다. 다음 함수를 수정해야 한다.&lt;/p>
&lt;ul>
&lt;li>has_related_branch&lt;/li>
&lt;li>related_branches&lt;/li>
&lt;/ul>
&lt;p>수정 방법은 간단한데, Branch와 비교하는 Regular Expression 의 문법을 찾아보자. &lt;code>/\A${iid}-(?!\d+-stable)/i&lt;/code> 라고 되어 있을 것이다. 이걸 실제로 &lt;code>irb&lt;/code> 에서 테스트해 보면, &lt;code>420-title&lt;/code> 같은 건 되는데 &lt;code>420-0-stable&lt;/code> 은 인식이 안 되는 것을 알 수 있다. (뭔가.. 이상하다) 아무튼 이걸 적절한 Regular Expression 으로 바꿔 주도록 하자. Ruby의 Regexp 에 익숙치 않다면 &lt;a class="link" href="http://rubular.com/" target="_blank" rel="noopener"
>Rubular 사이트&lt;/a>의 도움을 받아보도록 하자. (내 경우는 간단하게 &lt;code>/\AISSUE#{iid}/i&lt;/code> 라고 했다.)&lt;/p>
&lt;p>수정을 했다. 하지만 끝이 아니다. 마무리를 해 줘야 한다. 실제 Gitlab이 서비스되고 있는 경로는 &lt;code>/var/opt/gitlab&lt;/code> 이므로, 해당 경로로 적용을 시켜줘야 한다. 어떻게?&lt;/p>
&lt;p>간단하다. &lt;code>gitlab-ctl reconfigure &amp;amp;&amp;amp; gitlab-ctl restart&lt;/code> 를 입력하자.&lt;/p></description></item></channel></rss>