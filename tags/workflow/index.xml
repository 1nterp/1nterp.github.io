<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Workflow on InterP Blog</title><link>https://interp.blog/tags/workflow/</link><description>Recent content in Workflow on InterP Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 09 Jul 2024 09:56:16 +0900</lastBuildDate><atom:link href="https://interp.blog/tags/workflow/index.xml" rel="self" type="application/rss+xml"/><item><title>Github Workflow 로 PR Comment 등록하기</title><link>https://interp.blog/github-workflow-pr-comment/</link><pubDate>Tue, 09 Jul 2024 09:56:16 +0900</pubDate><guid>https://interp.blog/github-workflow-pr-comment/</guid><description>&lt;p>현재 하고 있는 작은 프로젝트는, 변경 내용을 main branch 에 반영하고 나서 추가 작업이 이루어지는 구조를 하고 있다. 문제는 이 &lt;em>&amp;lsquo;추가 작업&amp;rsquo;&lt;/em> 을 Pull Request 에서 진행하더라도, main branch 와 working branch 사이에 어떤 결과물 차이가 있는지 눈으로 확인하기가 쉽지 않았다. 그래서, 아예 두 branch 에서 작업을 진행시키고, 진행한 결과를 diff 로 확인하면 어떨까 싶었다.&lt;/p>
&lt;p>Pull Request (PR) 를 등록할 때, Github Workflow 를 이용해서 PR Comment 를 등록하는 방법을 찾아보았다. 이 글에서는, Github Workflow 에서 실행한 결과물을 그대로 PR Comment 로 등록하는 방법을 소개한다.&lt;/p>
&lt;h2 id="언제-실행되어야-할까">언제 실행되어야 할까&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Data Check on PR&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;data/**&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>data/**&lt;/code> 내용이 변경되는 PR 인 경우에만 해당 Workflow 가 작동하도록 했다.&lt;/p>
&lt;h2 id="두-개의-checkout">두 개의 checkout&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">check-data&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">self-hosted&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Checkout main branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ref&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main-branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Checkout PR branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pr-branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>두 개 버전으로 checkout 을 받아, &lt;code>main-branch&lt;/code> 와 &lt;code>pr-branch&lt;/code> 경로에 각자 두기로 했다. 그리고 아래와 같이 &lt;code>working-directory&lt;/code> 로 구분된 &amp;lsquo;추가작업&amp;rsquo; 을 실행했다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run &amp;#39;task&amp;#39; on main branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">... do something ...&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">working-directory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./main-branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run &amp;#39;task&amp;#39; on PR branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">... do something ...&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">working-directory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./pr-branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="diff-출력하기">Diff 출력하기&lt;/h2>
&lt;p>두 결과가 각각 &lt;code>main-branch/result&lt;/code> 와 &lt;code>pr-branch/result&lt;/code> 에 저장되었다면, 이를 diff 로 출력해보자.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Diff&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">diff&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> diff -bur main-branch/result pr-branch/result &amp;gt; diff.txt || true
&lt;/span>&lt;span class="sd"> if [ -s diff.txt ]; then
&lt;/span>&lt;span class="sd"> echo &amp;#34;diff_exists=true&amp;#34; &amp;gt;&amp;gt; $GITHUB_ENV
&lt;/span>&lt;span class="sd"> else
&lt;/span>&lt;span class="sd"> echo &amp;#34;diff_exists=false&amp;#34; &amp;gt;&amp;gt; $GITHUB_ENV
&lt;/span>&lt;span class="sd"> fi
&lt;/span>&lt;span class="sd"> echo &amp;#39;DIFF_REPORT&amp;lt;&amp;lt;EOF&amp;#39; &amp;gt; $GITHUB_OUTPUT
&lt;/span>&lt;span class="sd"> echo &amp;#34;\`\`\`diff&amp;#34; &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;/span>&lt;span class="sd"> cat diff.txt &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;/span>&lt;span class="sd"> echo &amp;#34;\`\`\`&amp;#34; &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;/span>&lt;span class="sd"> echo &amp;#39;EOF&amp;#39; &amp;gt;&amp;gt; $GITHUB_OUTPUT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>하나씩 설명하면,&lt;/p>
&lt;ul>
&lt;li>&lt;code>diff -bur&lt;/code> 은 디렉토리 내부 파일들을 재귀적으로 비교해서 (&lt;code>-r&lt;/code>) 공백은 무시하고 (&lt;code>-b&lt;/code>) Unified diff 로 (&lt;code>-u&lt;/code>) 출력한다.&lt;/li>
&lt;li>&lt;code>|| true&lt;/code> 는 diff 결과가 없어서 종료코드가 1 이 되는 경우를 무시한다. 이게 없다면, 해당 Step 은 실패한다!&lt;/li>
&lt;li>&lt;code>if [ -s diff.txt ]&lt;/code> 는 diff 결과가 있으면, &lt;code>diff_exists=true&lt;/code> 를 환경변수로 저장한다. 이 때 사용하는 &lt;code>$GITHUB_ENV&lt;/code> 는 Workflow 내에서 사용할 수 있는 환경변수를 저장하는 공간이다. (&lt;a class="link" href="https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-writing-an-environment-variable-to-github_env" target="_blank" rel="noopener"
>예제&lt;/a>)&lt;/li>
&lt;li>&lt;code>echo 'DIFF_REPORT&amp;lt;&amp;lt;EOF'&lt;/code> 이하 내용들은, &lt;code>$GITHUB_OUTPUT&lt;/code> 에 저장된 내용을 &lt;code>$DIFF_REPORT&lt;/code> 라는 사용자 환경변수에 저장한다는 의미이다. 이는 Workflow 내에서 출력할 수 있는 변수로, 이를 이용해서 PR Comment 에 출력할 수 있다. (&lt;a class="link" href="https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-masking-a-generated-output-within-a-single-job" target="_blank" rel="noopener"
>예제&lt;/a>)
&lt;ul>
&lt;li>여기서 markdown syntax 를 한꺼번에 적용하기 위해서 ```diff 와 ``` 를 앞뒤로 미리 출력했다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="pr-comment-등록">PR Comment 등록&lt;/h2>
&lt;p>이번에는 &lt;code>github-script&lt;/code> 를 사용한다. 그렇기 때문에 &lt;code>GITHUB_TOKEN&lt;/code> 등록이 필요하다. 자세한 내용은 &lt;a class="link" href="https://zeddios.tistory.com/1047" target="_blank" rel="noopener"
>이 블로그&lt;/a>에 정리가 잘 되어 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Upload diff to PR comment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">env.diff_exists == &amp;#39;true&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/github-script@v7&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">DIFF_CONTENTS&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{steps.diff.outputs.DIFF_REPORT}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">github-token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ GITHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> github.rest.issues.createComment({
&lt;/span>&lt;span class="sd"> issue_number: context.issue.number,
&lt;/span>&lt;span class="sd"> owner: context.repo.owner,
&lt;/span>&lt;span class="sd"> repo: context.repo.repo,
&lt;/span>&lt;span class="sd"> body: process.env.DIFF_CONTENTS
&lt;/span>&lt;span class="sd"> })&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>