<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Microsoft on InterP Blog</title><link>https://interp.blog/tags/microsoft/</link><description>Recent content in Microsoft on InterP Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Fri, 18 Apr 2025 21:49:25 +0900</lastBuildDate><atom:link href="https://interp.blog/tags/microsoft/index.xml" rel="self" type="application/rss+xml"/><item><title>MS Power Apps 로 만든 대여반납기 (1) 시작하기</title><link>https://interp.blog/ms-power-apps-borrow-intro/</link><pubDate>Fri, 18 Apr 2025 21:49:25 +0900</pubDate><guid>https://interp.blog/ms-power-apps-borrow-intro/</guid><description>&lt;img src="https://interp.blog/feature.jpeg" alt="Featured image of post MS Power Apps 로 만든 대여반납기 (1) 시작하기" />&lt;h1 id="제작동기">제작동기&lt;/h1>
&lt;p>사내 동호회에서 물품 대여 반납을 관리하는 시스템을 만드려는 시도가 있었다. 지금까지는 그냥 아주 간단하게, 엑셀 시트에다가 빌려가요~ 반납해요~ 이런 식으로 마구잡이로 쓰고 있었다. &lt;del>반달같은 사고는 없긴 했지만&lt;/del> 소소한 혼란이 있거나 불안한 면이 있었다. 그래서 어떻게 시스템을 만들까? 그냥 간단히 데이터베이스에 데이터 넣고 CRUD 하는 웹 서비스 간단히 만들면 끝나는 일일 수도 있다. 그런데&amp;hellip; 서버는 그럼 어디다 두지? 대여하는 사람들의 개인정보가 담긴 회사 내부 정보라 바깥에서 둘 수는 없었다. 그렇다고 사내 서버를 두게 되면 대여반납할 때 마다 VPN 을 연결해야만 한다.&lt;/p>
&lt;p>그래서 조금 수고스럽지만, 이미 데이터가 엑셀에 있고, 공식 채널을 Microsoft Teams 에서 쓰고 있으니 여기서 해결할 방법을 찾고 있었다. 그러다가 눈에 띈 것이 Power Apps in Teams 였다. Teams 에서 Power Apps 를 사용하면, VPN 신경쓰지 않아도 되고 MS 에서 관리하는 사내 환경에 데이터를 보관할 수 있으니 괜찮지 않을까? Power Apps 의 로우코드에 낚여 오늘 하루 삽질을 해 보았다.&lt;/p>
&lt;h1 id="power-apps-를-이용한-설계">Power Apps 를 이용한 설계&lt;/h1>
&lt;p>Power Apps 는 Microsoft 365 의 일부로 제공되는 로우코드 애플리케이션 개발 플랫폼이다. 사용자는 코딩 없이도 애플리케이션을 만들 수 있으며 &lt;del>아니다&lt;/del>, 다양한 데이터 소스와 통합할 수 있다. Power Apps 는 비즈니스 프로세스를 자동화하고, 사용자 정의 애플리케이션을 쉽게 만들 수 있도록 도와준다&amp;hellip; 라고 한다. 써먹으려면 노코드는 절대 안되고, 객체지향 프로그래밍 개념이나 UI 프로그래밍에 대한 감각은 있어야 한다. 그렇다고 코드가 막 어렵진 않은데&amp;hellip; &lt;del>ChatGPT 와 바이브 코딩을 하면서 짜면 된다.&lt;/del>&lt;/p>
&lt;p>처음에는 엑셀 데이터를 그대로 연결해서, 대여기록과 반납기록을 가져가려고 했지만.. Power Apps 와 엑셀의 궁합이 그렇게 좋지 않다고 한다. 단순히 읽는 것은 무리가 없는데, 엑셀을 데이터베이스처럼 쓰려면 충돌이 잦을 것이라는 경고가 있었다. 실제로 Connector 라는 것으로 연결해 봐도 성능이 썩 나오지 않는 걸 보면 말이다.&lt;/p>
&lt;p>그래서 다음과 같이 디자인했다.&lt;/p>
&lt;ol>
&lt;li>대여기록만 나타내는 Dataverse 테이블을 만든다. (빈번한 쓰기에도 호환이 좋다고 한다.)&lt;/li>
&lt;li>이 Dataverse 테이블을 기반으로 Power Apps 를 만든다.&lt;/li>
&lt;li>물품목록을 나타내는 Excel 테이블을 Power Apps 에 연결한다.&lt;/li>
&lt;li>기타 다양한 검증 코드를 넣는다.&lt;/li>
&lt;/ol>
&lt;p>Dataverse는 Microsoft Power Platform의 클라우드 기반 데이터베이스로, Power Apps와 통합되어 데이터를 효율적으로 관리할 수 있다. 관계형 데이터 모델링, 세부적인 보안 설정, 확장성 등으로 데이터 충돌을 최소화할 수 있다고 한다.&lt;/p>
&lt;p>그럼 물품 목록도 Dataverse 로 옮겨야 하는 것 아닌가? 라고 생각할 수 있지만, 물품 목록은 자주 바뀌지 않기 때문에 엑셀로 두기로 했다. 엑셀은 Power Apps 에서 읽기 전용으로 연결할 수 있으니, 물품 목록을 수정할 때는 Power Apps 신경쓰지 않고 엑셀을 직접 열어 수정하면 되는 편리함도 있고.&lt;/p>
&lt;h1 id="power-apps-in-teams-시작">Power Apps in Teams 시작&lt;/h1>
&lt;p>애당초 목표가 Teams 라는 네트워킹 앱에서 접근할 수 있는 시스템을 만드는 것이었으므로, 여기서는 Teams 에서 Power Apps 를 시작하는 방법을 설명한다.&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="image.png"
alt="Power Apps in Teams 첫 화면 (없으면 &amp;amp;hellip; 눌러서 앱 추가하자)" width="60%"/> &lt;figcaption>
&lt;p>Power Apps in Teams 첫 화면 (없으면 &amp;hellip; 눌러서 앱 추가하자)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Start 를 누르면 팀을 선택하라고 나오고, 적절한 팀을 선택하면 앱을 만들어 준다. 이름을 지어주고 나면 아래처럼 화면이 나오는데, 쉽게 가기 위해서 &lt;strong>With Data&lt;/strong> 를 선택한다. 우리는 대여기록을 Dataverse 에 저장할 것이므로, 새로운 테이블을 만들기 위해 &lt;strong>Create New Table&lt;/strong> -&amp;gt; &lt;strong>Start with a Blank Table&lt;/strong> 을 선택한다.&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="image-2.png"
alt="휑덩그레한 초기화면&amp;amp;hellip;" width="60%"/> &lt;figcaption>
&lt;p>휑덩그레한 초기화면&amp;hellip;&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>이 다음부터는 노션에서의 테이블 만들기와 비슷하다. 원하는 컬럼과 타입을 만들고 시험삼아 테스트 레코드도 하나 집어넣어 주자. 대여기록에는 뭘 빌릴 것인지, 언제부터 언제까지 빌릴 것인지, 누가 빌리는지 기록하면 된다.&lt;/p>
&lt;p>그런데 여기에는 &amp;lsquo;누가&amp;rsquo; 를 나타내는 테이블이 없다. &lt;strong>사실은 있다. Owner 라는 테이블 컬럼을 사용할 것이다.&lt;/strong> 레코드를 입력하거나 수정하는 사람의 MS 계정 정보가 자동으로 기록되기 때문이다.&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="image-3.png"
alt="Dataverse 테이블 만들기" width="60%"/> &lt;figcaption>
&lt;p>Dataverse 테이블 만들기&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>여전히 템플릿 화면이 보인다면, 다시 &lt;strong>With Data&lt;/strong> 를 눌러서 아까 만든 테이블을 선택해 주자. 그러면 자기가 알아서 잘~ 만든다.&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="image-4.png"
alt="Dataverse 테이블을 보고 자기가 알아서 만든 편집기 스크린" width="60%"/> &lt;figcaption>
&lt;p>Dataverse 테이블을 보고 자기가 알아서 만든 편집기 스크린&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h1 id="기본-개념-파악하기">기본 개념 파악하기&lt;/h1>
&lt;h2 id="편집기">편집기&lt;/h2>
&lt;p>편집기 구조를 보면,&lt;/p>
&lt;ul>
&lt;li>스크린을 구성하는 객체들의 트리 (왼쪽)&lt;/li>
&lt;li>엑셀처럼, 수식을 입력하는 곳 (위)&lt;/li>
&lt;li>스크린 (가운데)&lt;/li>
&lt;li>객체 속성을 보여주거나 에러를 보여주는 사이드바 (오른쪽)&lt;/li>
&lt;/ul>
&lt;p>객체 속성 창에서 수식을 입력하려면 창 크기도 작고 입력할 내용은 많아서 매우 번거롭다. 이 때는 &lt;strong>객체 속성의 이름을 클릭하면 수식 입력창으로 이동할 수 있다&lt;/strong>. 수식 입력창은 크기 조절이 가능하고, 오른쪽 화살표로 펼쳤다 접었다도 가능하기 때문에 편리하다.&lt;/p>
&lt;h2 id="스크린">스크린&lt;/h2>
&lt;p>코드가 필요없다고 하지만, 코드를 1도 안 쓴다고는 하지 않았다. 결국 로직을 짜야 하는 부분이 생기기 마련이다. 혹시 예전에 MFC 나 C# 으로 GUI 를 만들어 봤다면 크게 당황할 것이 없을 것이다.&lt;/p>
&lt;p>일단 자동으로 만들어 준 스크린을 잘 보면 크게 다음 구조로 되어 있다.&lt;/p>
&lt;ul>
&lt;li>영역을 나누는 컨테이너 (Container)&lt;/li>
&lt;li>테이블 레코드를 보여주는 갤러리 (Gallery, 왼쪽 컨테이너)&lt;/li>
&lt;li>레코드를 입력하거나 수정할 수 있는 폼 (Form, 오른쪽 컨테이너)
&lt;ul>
&lt;li>레코드의 각 컬럼을 입력하거나 보여주는 데이터 카드 (DataCard)
&lt;ul>
&lt;li>문자열, 텍스트박스, 체크박스, 버튼 등을 나타내는 기본 객체 (Object)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>객체들은 기본적으로 컨테이너에 배치된다. 또는 데이터 카드 내부에 속할 수 있다. 하지만 폼 바로 밑에는 배치될 수 없다. (폼은 데이터 카드로 이루어진다!)&lt;/p>
&lt;p>여기서 가장 중요한 건 갤러리와 폼인데, 갤러리에서 선택한 레코드를 폼으로 옮기는 과정을 이해하지 못하면 ChatGPT 에게 바이브 코딩을 시켜도 계속 도돌이표 질의응답이 이어진다. &lt;strong>TBA&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>갤러리의 OnSelect 속성을 보면 &lt;code>UpdateContext({ itemSelected: true, CurrentItem: ThisItem })&lt;/code> 라고 되어 있다. 이제부터 갤러리 내부 모든 객체는 &lt;code>ThisItem.&amp;lt;컬럼명&amp;gt;&lt;/code> 으로 갤러리에서 선택한 레코드의 값을 가져올 수 있다.&lt;/li>
&lt;li>TopBar_RightContainer 에 Edit Button 의 OnSelect 속성을 보자. &lt;code>UpdateContext({selectedRecord: BrowseGallery1.Selected, editMode:true})&lt;/code> 라고 되어 있다. 갤러리에서 선택한 레코드를 &lt;code>selectedRecord&lt;/code> 라는 변수에 저장하고, &lt;code>editMode&lt;/code> 를 true 로 바꿔준다.&lt;/li>
&lt;li>폼의 DataSource &lt;code>Item&lt;/code> 속성은 &lt;code>If(BrowseGallery1.DisplayMode = DisplayMode.Disabled, selectedRecord, BrowseGallery1.Selected)&lt;/code> 로 되어 있다. 갤러리에서 선택한 레코드가 &lt;code>selectedRecord&lt;/code> 에 저장되어 있다면 그걸 사용하고, 아니라면 갤러리에서 선택한 레코드를 사용한다.&lt;/li>
&lt;/ol>
&lt;p>여기서 주목할 부분이 UpdateContext 이다. 이 함수는 현재 스크린에서만 사용할 수 있는 변수를 만들어 준다. 똑같이 &amp;lsquo;선택한&amp;rsquo; 레코드라도, 갤러리에서는 &lt;code>ThisItem&lt;/code> 으로 접근하고, 폼에서는 &lt;code>selectedRecord&lt;/code> 로 접근해야 한다. 문제는 ChatGPT 도 이 부분을 헷갈려 한다는 거다. &lt;del>정신 바짝 차리기&lt;/del>&lt;/p>
&lt;h1 id="다음-이-시간엔">다음 이 시간엔..&lt;/h1>
&lt;p>Preview 버튼을 눌러서 실제로 작동하는지 확인할 수 있다. 사실 코드를 건드린 건 하나도 없지만 말이다.&lt;/p>
&lt;p>하지만 이렇게만 쓰면 다음과 같은 불상사가 생긴다.&lt;/p>
&lt;ul>
&lt;li>대여일과 반납일을 거꾸로 입력할 수 있고&lt;/li>
&lt;li>사용자 A 가 입력한 걸 사용자 B 가 수정/삭제할 수 있다고&lt;/li>
&lt;li>물품란에 엉뚱한 것을 적어낼 수 있고&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>그래서 이런 부분을 막는 코드를 추가해야 한다. 이건 다음 포스트에 따로 정리해 두겠다.&lt;/p></description></item><item><title>Microsoft AI Tour Seoul 2025 후기</title><link>https://interp.blog/microsoft-ai-tour-seoul-2025-review/</link><pubDate>Thu, 27 Mar 2025 18:09:46 +0900</pubDate><guid>https://interp.blog/microsoft-ai-tour-seoul-2025-review/</guid><description>&lt;img src="https://interp.blog/microsoft-ai-tour-seoul-2025-review/feature.jpeg" alt="Featured image of post Microsoft AI Tour Seoul 2025 후기" />&lt;p>AI Tour 2년 연속 개근이다! &lt;a class="link" href="https://interp.blog/microsoft-ai-tour-review" >지난 해 후기&lt;/a>에 이어 올해도 후기를 남긴다.&lt;/p>
&lt;p>사실 전날 오후 1시에 미리 배지를 받았는데, 이유는 키노트 우선지정석이 선착순으로 배포되기 때문이었다. 배지와 우선지정석 카드, 그리고 럭키드로우 27번을 받았다. &lt;del>내 앞의 26명은 누구인가&amp;hellip;&lt;/del>&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="79FAA4FF-539A-454D-83F4-747C9E99CBC6_1_102_o.jpeg"
alt="행사장인 aT센터 입구" width="100%"/> &lt;figcaption>
&lt;p>행사장인 aT센터 입구&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>행사 당일엔 오전 9시 10분쯤에 aT센터에 도착했다. 등록데스크에 사람이 바글바글.. 곧바로 세션 하나를 골라 들어가 보았다. &amp;lsquo;AI와 교육의 만남&amp;rsquo; 이라는 대담이 포함된 세션이었는데, AI 가 교육에 어떻게 기여했나.. 사용사례 보여주고&amp;hellip; 사람들이 영 흥미가 없어 보였다. 그래도 기억에 남는 부분은,&lt;/p>
&lt;ul>
&lt;li>생성형 AI 는 학생들에게는 보조교사의 역할을, 교사와 교직원에겐 보조적인 동료/비서로서의 역할을 하기 때문에 교육 현장에서 매우 중요한 부분을 차지할 수 있다.&lt;/li>
&lt;li>기본적으로 AI 는 성인을 기준해서 제공되고 있다. &lt;em>미성년자들에겐 생성형 AI 의 답이 올바른지, 혹은 윤리적인지 판단할 수 있다고 단언하기 어렵기 때문이다.&lt;/em> - 많은 생각을 하게 만드는 문장이다. AI 가 보조교사로 쓰이려면 매우 조심스러운 접근이 필요하다는 것이다.&lt;/li>
&lt;li>&amp;lsquo;&lt;em>도입이 끝이 아니다, 구성원들의 AI 사용 수준을 끌어올려야 한다&lt;/em>&amp;rsquo; 였다.
&lt;ul>
&lt;li>대담에 참석하신 성균관대 교수님도, LG CNS 부스에서 AX 관련 대화를 나눴을 때도 강조된 부분이다.&lt;/li>
&lt;li>구성원 간에 활발한 프롬프트/에이전트 공유 문화가 필요하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>정부에서는 교육기관/공공기관에서 국내 Cloud Provider 를 쓰라고 압박하는데, 데이터 주권 문제, 보안 문제 때문이라고 본다. 하지만 더 많은 기회를 잡으려면 글로벌 Cloud Provider 를 쓸 수 있도록 장려해 줄 필요도 있다고 본다.
&lt;ul>
&lt;li>MS Azure 가 &lt;a class="link" href="https://www.msn.com/ko-kr/news/other/ms-csap-%EC%9D%B8%EC%A6%9D-%ED%9A%8D%EB%93%9D-%EA%B3%B5%EA%B3%B5%EA%B8%B0%EA%B4%80-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%A7%84%EC%B6%9C-%EB%B9%97%EC%9E%A5-%EC%97%B4%EC%97%88%EB%8B%A4/ar-AA1v5mgE?ocid=BingNewsSerp" target="_blank" rel="noopener"
>CSAP 를 통과했다&lt;/a>는 언급을 여기서 같이 하더라.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>생성형 AI 는 만능이 아니다. 대체제가 아니라, 도구일 뿐이다.&lt;/strong> 그래서 &lt;em>CoPilot&lt;/em> 이라는 네이밍이 굉장히 좋다고 생각한다.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>다음으로 워크샵 세션을 가서 VSCode 에서의 Github CoPilot 을 들으러 갔다.&lt;/p>
&lt;ul>
&lt;li>Use Instruction Files 를 사용해 (시스템 프롬프트를 주는 것 처럼) CoPilot Chat 에 적용할 수 있었다. 이런 기능을 여태 왜 안 썼지? 데모에서는 &amp;lsquo;조직의 Coding Convention 을 설명하는 마크다운&amp;rsquo; 따위를 집어넣으면 &lt;strong>거기에 맞춰 짜주거나, 기존 코드를 리펙터링 할 수 있다&lt;/strong>고 한다!
&lt;ul>
&lt;li>Commit Message 에 대한 안내도 할 수 있다. 파일로 줘도 되고, 직접 적어도 된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Agent Mode (insider 에서만 사용 가능) 에서는 reasoning 하는 방식으로 단계별 수행이 가능하다. 단계마다 사용자의 확인을 받는 부분이 인상적이었다.&lt;/li>
&lt;/ul>
&lt;p>이걸 보면서, Instruction Files 를 여러개 줘서 Configuration Data 를 쉽게 작성할 수 있게 하면 너무 좋겠단 생각을 했다.&lt;/p>
&lt;hr>
&lt;p>키노트 세션 입장은 너무 힘들었다. 작년보다 사람이 더 많아 보였다. 그래서 키노트 장소를 작년 커뮤니티 룸으로 잡은 이유기도 하겠지. 워크샵 세션이 1층이었는데, 키노트 세션 장소는 3층이라서 올라가는 에스컬레이터를 10분 넘게 기다렸다. 그만큼 3층에 사람이 꽉 차 있었단 이야기. 그나마 3층에 올라가보니 우선 입장은 줄을 안 서도 된다고 해서 곧바로 앉을 수 있었다. 앞에 열 줄 정도만 있어서 나름 잘 보였다.&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="performance.jpeg"
alt="여기 공식이 있습니다&amp;amp;hellip;" width="100%"/> &lt;figcaption>
&lt;p>여기 공식이 있습니다&amp;hellip;&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;del>기를 받기 위해&lt;/del> 가까이서 보고싶었던 MS CEO 인 사티아 나델라가 등장하면서 키노트를 열었다. 초반 슬라이드가 인상적인데, AI 퍼포먼스는 결국 Token 대비 전력과 비용을 줄이는 것이라고.&lt;/p>
&lt;p>간단히 요약하면, 세 가지 키워드로 요약할 수 있다. &lt;strong>Agent, AMD, 그리고 신뢰 (Trustworthy)&lt;/strong>. M365 CoPilot 위주의 발표와 데모가 있었는데, Teams 미팅에서 내용을 요약하고, 그 내용을 파워포인트 슬라이드로 만들어달라는 부분이 인상깊었다. Agent 공유 기능도 좋아보였고.&lt;/p>
&lt;p>M365 CoPilot 의 Reasoning Agent 발표, AMD 와의 협업, 국내 기업의 사용 사례 (GS리테일, 아모레퍼시픽) 를 언급하면서, 마지막에는 양자컴퓨팅 칩인 마요라나1 을 소개했다. 동영상 퀄리티가 매우 뛰어나서 홀린 듯이 본 기억이 있다. (찾아보니 &amp;lsquo;&lt;em>자기자신이 자신의 반물질 성질을 가진 입자&lt;/em>&amp;rsquo; 를 뜻하는 마요라나 페르미온 (Majorana Fermion) 에서 따온 이름이라고)&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="feature.jpeg"
alt="동영상이 굉장히 예뻤던 (&amp;amp;hellip;) 마요라나1 소개" width="100%"/> &lt;figcaption>
&lt;p>동영상이 굉장히 예뻤던 (&amp;hellip;) 마요라나1 소개&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;hr>
&lt;p>점심은 작년과 같았는데, 먹을 수 있는 장소가 작년보다 더 찾기 힘들었다. 한 층 내려가서 카페에 양해를 구하고, 음료를 주문하고 동료와 앉아서 편하게 먹었다. 여기에서조차 자리를 찾긴 힘들었지만, 적어도 시장바닥같은 곳에서 먹는 것보다는 나았다.&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="20707427-5CEC-497F-9C78-4B9CBD4FBF32_1_102_a.jpeg" width="100%"/>
&lt;/figure>
&lt;p>오후에는 세션을 더 이상 듣지 않고, 부스를 돌아다녔다. 인상깊었던 곳은 LG CNS 와 슈어였는데.. AX (AI Transformation) 를 어떻게 도와주는지에 대한 프로세스를 열성적으로 말씀하신 책임님이 생각난다. 그 분도 &amp;lsquo;&lt;em>도입이 끝이 아니다, 교육이 필요하다&lt;/em>&amp;rsquo; 는 것이다. 백번 공감한다. 슈어는 마이크 브랜드로만 알았는데, 수음기를 엄청나게 많이 달아 둔 천장형 스피커로 AI 미팅 시장 파이를 먹겠다는 부분이 인상 깊었다.&lt;/p>
&lt;p>그리고.. 동료와 함께 더 이상 듣는 것이 큰 의미가 있을까 싶어 (!) 행사장을 일찍 빠져나왔다.&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="87DD1B81-25E8-482B-90FF-844CC18BE191_1_105_c.jpeg"
alt="행사장에서 받은 것들.. 포장된 것은 레고 캘린더/외장 배터리" width="100%"/> &lt;figcaption>
&lt;p>행사장에서 받은 것들.. 포장된 것은 레고 캘린더/외장 배터리&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;hr>
&lt;p>이제 2년차에 접어든 MS AI Tour Seoul. 아무래도 이것저것 많이 접해본 개발자들에겐 신선한 소재나 배울 거리가 없었던 것 같다. 작년도, 그리고 올해도.&lt;/p>
&lt;p>물론 잘 아는 분야라도 책을 읽거나 대화를 하다 보면 &lt;strong>틈새를 채울 만한 새로운 깨달음을 얻을 수 있으니&lt;/strong>, 아주 시간낭비라고 생각하진 않았다. 혹은, 내가 가고 있는 방향이 맞는지, &lt;strong>비슷한 방향을 향하는 사람들이 얼마나 많은지 동향 파악&lt;/strong>을 할 수도 있었던 것 같다.&lt;/p></description></item><item><title>Microsoft AI Tour 후기</title><link>https://interp.blog/microsoft-ai-tour-review/</link><pubDate>Tue, 30 Apr 2024 21:23:23 +0900</pubDate><guid>https://interp.blog/microsoft-ai-tour-review/</guid><description>&lt;img src="https://interp.blog/microsoft-ai-tour-review/feature.jpeg" alt="Featured image of post Microsoft AI Tour 후기" />&lt;p>개발자들에게 위기인지 기회인지 모를 물결을 이해하기 위해 OpenAI 관련 내용을 보여줄 수 있는 Microsoft AI Tour 에 신청해 다녀왔다. 코로나 위기가 찾아오기 이전에 열렸던 MS Ignite 행사를 코엑스에 다녀온 이후로, 두 번째 MS 컨퍼런스 행사에 참석한 것이다. 이번에는 코엑스가 아닌, 양재 aT 센터이다.&lt;/p>
&lt;p>우선 초대장에 선착순이라는 문구가 몇 번이고 보였다. 늦으면 아침도 없다는 것 처럼 들렸기 때문에, 7시 30분 정도에 도착해서 등록하고 기다렸다. 아침은 다양한 빵과 우유/커피. 마들렌과 고구마 파이가 맛있었다. 아침이 컨퍼런스의 목적은 아니었지만, 맛있으면 기분 좋게 들을 수 있으니까!&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="breakfast.jpeg"
alt="브런치?" width="80%"/> &lt;figcaption>
&lt;p>브런치?&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>장소가 코엑스에 비해 넓지 않아서인지, 사람이 적었음에도 꽤나 북적였다. aT 센터 1, 3층만 사용하고 그마저도 에스컬레이터 만으로 이동이 가능했기 때문이다. 그래서 원하는 세션을 들으러 가려면 타임테이블을 잘 보고 이동해야 하는 건 기본에, 현재 듣고 있는 세션이 조금 늦을라치면 도중에 나와야 할 정도였다. 불만이라기 보다는, 어쩔 수 없다고 생각한다.&lt;/p>
&lt;p>정말로 불만이었던 점은 워크샵 세션 (핸즈온) 이나 브레이크아웃 (일반) 세션에서 알려주는 &lt;strong>지식 수준&lt;/strong>이었다. &lt;del>내가 RAG 워크샵을 못 들어서 이러는게 아니다&lt;/del> 아무래도 청중의 수준을 가늠할 수 없다보니 가능한한 쉽게 했으리라 이해는 가지만, 그래도 개발자 세션이면 입문 코스보다는 심화 코스 위주로 알려줬으면 하는 바램은 솔직히 있었다.&lt;/p>
&lt;p>아무튼, 씨어터 세션 (부스 세션) 을 제외하고 오늘 들은 걸 간단히 정리하고 싶었다.&lt;/p>
&lt;h1 id="키노트">키노트&lt;/h1>
&lt;p>그 넓고 넓은 키노트 강연장에 모든 사람이 들어갈 수 없어서, 1층 워크샵 세션장에서 스트리밍으로 보았다. 통역기도 자리마다 제공해 줬는데, 왜 통역사가 말하는 걸 스피커로도 틀었는지 의문이다. &lt;a class="link" href="https://www.linkedin.com/in/shanselman" target="_blank" rel="noopener"
>스콧&lt;/a>의 스피치를 듣는게 훨씬 더 나았는데 말이다.&lt;/p>
&lt;p>키노트 내용은 별다른게 없었고, 곧 MS 365 Copilot 이 한국어 지원을 한다는 내용과 LG전자, 엔비디아, SK이노베이션 순으로 Azure AI 사용 사례를 이야기한 게 전부였다. LG전자 상무님은 동굴 목소리에 언변이 좋으셔서 &amp;lsquo;저정도는 해야 저런 자리에 가는구나&amp;rsquo; 싶었다..&lt;/p>
&lt;h1 id="github-copilot">Github Copilot&lt;/h1>
&lt;p>스콧이 키노트 세션장에서 이어서 진행한 세션이었다. 이번에는 3층에 올라가서 들을 수 있어서 좋았고, Copilot 의 무궁무진함을 느껴볼 수 있어서 좋았다.&lt;/p>
&lt;p>주목할만한 구절이 두 개 있었는데, Github Copilot 의 목적은 &amp;lsquo;&lt;strong>Focusing on your own code&lt;/strong>&amp;rsquo; 이라고 한다. 달리 말하면, 여러분만이 짤 수 있는 코드를 작성하는 일 외에 나머지 일들 (구글링을 하거나, 코드를 읽고 이해하거나, 코드 작업으로 다시 돌아오는 과정) 을 도와주기 위한 것이라는 말이다.&lt;/p>
&lt;p>그리고 이 서비스는 &lt;strong>Autopilot 이 아니라 Copilot 이라는 점&lt;/strong>을 많이 강조했다. 알아서 다 해주는 것이 아니라, 여러분이 요청한 것에 맞춰 도움을 줄 수 있도록 제안하는 것이다. 자율주행 차에 올라타서도 핸들을 잡아야 하는 것에 비유하긴 했다.&lt;/p>
&lt;h1 id="azure-ai-search">Azure AI Search&lt;/h1>
&lt;p>워크샵 세션에서 밀려서 듣긴 했는데, 나름 유익했다. Architect 분께서 현업에서 겪었던 일화는 슬라이드에 적혀있지 않았지만 슬쩍슬쩍 보따리에서 꺼내주셔서 재밌었던 것 같다. &lt;del>고객님들은 데이터만 던져주시곤 &amp;lsquo;해줘&amp;rsquo; 하세요 ㅠㅠ&lt;/del>&lt;/p>
&lt;p>RAG 개념을 모르는 사람은 초반부가 흥미가 있었을지 모르겠지만 나는 좀 지루했고, 되려 RAG 의 품질을 올리기 위해 어떤 방법을 쓰는지가 더 궁금했다. 몇 가지 인사이트는, vector search 뿐만 아니라 exact keyword search 를 섞은 hybrid search 가 더 좋은 결과를 낸다는 것이었다. Azure AI Search 는 여기에 더해 Semantic re-ranking 을 제공해서 그 정확도를 올렸다고 한다. 어쨌거나 중요한 건, 프롬프팅에 실어야 할 원천 데이터를 잘 선택하는 일일 것이다.&lt;/p>
&lt;hr>
&lt;p>불만이 있다면 있고 없다면 없겠지만, 그래도 개발자들을 위해서 무료로 컨퍼런스를 열고 지식을 공유받은 입장에서는 훌륭한 시간이었다. 다음에도 기회가 된다면 다른 형태의 컨퍼런스라도 참석하고 싶다!&lt;/p>
&lt;p>오늘 점심 도시락 사진으로 마무리한다. 맛있었다!&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="lunch.jpeg" width="80%"/>
&lt;/figure></description></item></channel></rss>