<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mac on InterP Blog</title><link>https://interp.blog/tags/mac/</link><description>Recent content in Mac on InterP Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Tue, 18 Apr 2023 14:04:01 +0900</lastBuildDate><atom:link href="https://interp.blog/tags/mac/index.xml" rel="self" type="application/rss+xml"/><item><title>Mac 디스플레이 해상도 조절 팁</title><link>https://interp.blog/mac-display-resolution-adjustment/</link><pubDate>Tue, 18 Apr 2023 14:04:01 +0900</pubDate><guid>https://interp.blog/mac-display-resolution-adjustment/</guid><description>&lt;img src="https://interp.blog/mac-display-resolution-adjustment/feature.png" alt="Featured image of post Mac 디스플레이 해상도 조절 팁" />&lt;p>내 Macbook M1 Pro 에는 두 개의 디스플레이가 있다.&lt;/p>
&lt;ul>
&lt;li>DELL U3818DW&lt;/li>
&lt;li>BenQ EX2780Q&lt;/li>
&lt;/ul>
&lt;figure>
&lt;img loading="lazy" src="monitor.png" width="50%"/>
&lt;/figure>
&lt;p>델 38인치 와이드 모니터는 주사율이 60Hz 밖에 지원되지 않지만, 벤큐의 27인치 모니터는 게이밍 답게 144Hz 까지 지원한다. &lt;del>나름 들어줄 만한 스피커도 있어서 서브로 잘 쓰는 중이다&lt;/del>&lt;/p>
&lt;h1 id="증상">증상&lt;/h1>
&lt;p>그런데 이 &amp;lsquo;디스플레이&amp;rsquo; 옵션에서는 HiDPI 설정만 하면 주사율이 50Hz 까지만 올릴 수 있다. HiDPI 를 끄면 144Hz 까지 선택할 수 있는데 말이다.&lt;/p>
&lt;p>내가 원하는 것은, 자글거리는 폰트를 두고 고주사율로 쓰는 게 아니라, HiDPI 이면서 144Hz 로 쓰고 싶었다. 좋은 방법이 없을까?&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="problem.png" width="50%"/>
&lt;/figure>
&lt;h1 id="해결-1-better-display-설치">해결 (1) Better Display 설치&lt;/h1>
&lt;p>&lt;a class="link" href="https://github.com/waydabber/BetterDisplay" target="_blank" rel="noopener"
>Better Display&lt;/a> 를 설치할 수 있다. 기본적으로 무료이고, 특정 기능을 사용하려면 구입해야 하지만 여기서는 무료 기능만 있어도 충분하다.&lt;/p>
&lt;p>설치하고 실행하면, 아래와 같이 해상도, 주사율 설정이 가능하다. HiDPI 설정하고도 주사율을 144Hz 까지 올릴 수 있다!&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="betterdisplay-option.png" width="70%"/>
&lt;/figure>
&lt;p>참고할 점은, 아까 디스플레이 설정에서 HiDPI 를 선택하면 자동으로 주사율 50Hz 가 선택될텐데, 이 상태에서 Better Display 를 실행시키면 해상도가 모두 보이지 않는다. 이 때는 &lt;strong>주사율을 먼저 50Hz 보다 높은 값으로 변경&lt;/strong>하면 된다. 그러면 해상도 옵션이 늘어난다.&lt;/p>
&lt;h1 id="해결-2-더욱-세밀한-hidpi-해상도-설정">해결 (2) 더욱 세밀한 HiDPI 해상도 설정&lt;/h1>
&lt;p>여기서 문제는, Better Display 를 해도 HiDPI 해상도 옵션이 몇개 없다는 사실이다. 나는 조금 더 큰 폰트 크기를 원했기 때문에, 두 개의 옵션 사이에 있는 중간 정도의 HiDPI 해상도를 원했다. 그렇다면 어떻게 해야 할까.&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="all-resolution.png" width="50%"/>
&lt;/figure>
&lt;ol>
&lt;li>먼저 &amp;lsquo;디스플레이&amp;rsquo; 옵션에서 모니터를 선택한 뒤, &amp;lsquo;&lt;em>모든 해상도 보기&lt;/em>&amp;rsquo; 를 클릭한다.&lt;/li>
&lt;li>원하는 HiDPI 해상도를 선택한다. (나는 두 가지 옵션의 사이에 있는 1920x1080 을 선택했다)&lt;/li>
&lt;li>Better Display 에 가서, &lt;em>아무것도 건드리지 말고&lt;/em> &lt;strong>주사율 (Refresh rate)&lt;/strong> 만 144Hz 로 올린다.&lt;/li>
&lt;/ol>
&lt;p>그러면 원하는 해상도로 고주사율의 디스플레이를 사용할 수 있다!&lt;/p></description></item><item><title>VSCode Vim 에서 키를 눌러 계속 입력하게 만들기</title><link>https://interp.blog/vscode-vim-mac-key-pressing-input/</link><pubDate>Mon, 03 Apr 2023 16:17:59 +0900</pubDate><guid>https://interp.blog/vscode-vim-mac-key-pressing-input/</guid><description>&lt;img src="https://interp.blog/vscode-vim-mac-key-pressing-input/feature.png" alt="Featured image of post VSCode Vim 에서 키를 눌러 계속 입력하게 만들기" />&lt;h1 id="문제">문제&lt;/h1>
&lt;p>Visual Studio Code 에서 Vim Plugin 을 쓰던 중, 입력한 것을 되돌리기 위해 &lt;code>u&lt;/code> 를 꾹 눌렀다.&lt;/p>
&lt;p>그러면 아래와 같이 &lt;strong>u&lt;/strong> 라는 알파벳에 어떤 변형을 가할 것인지 묻는다. 한/영만 필요한 나에게는 필요없는 기능인데..&lt;/p>
&lt;figure>
&lt;img loading="lazy" src="symptom.png"/>
&lt;/figure>
&lt;p>(참고로, &lt;code>u&lt;/code> 를 꾹 누르는게 아니라 반복해서 입력해도 한 번만 입력되는 경우엔 &lt;a class="link" href="https://interp.blog/vscode-vim-undo-redo-key-repeat" >블로그의 다른 포스팅&lt;/a>을 참고하자.)&lt;/p>
&lt;h1 id="해결">해결&lt;/h1>
&lt;p>터미널에서 다음을 입력하고, VSCode 를 &lt;strong>재시작&lt;/strong>한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool false
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="참고">참고&lt;/h1>
&lt;p>출처는 여기 &lt;a class="link" href="https://stackoverflow.com/questions/39972335/how-do-i-press-and-hold-a-key-and-have-it-repeat-in-vscode" target="_blank" rel="noopener"
>Stack overflow&lt;/a> 페이지에서 찾을 수 있다.&lt;/p>
&lt;p>참고로 모든 프로그램에서 저 변형 대화창을 끄고 싶다면 다음과 같이 입력한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">defaults write -g ApplePressAndHoldEnabled -bool false
&lt;/code>&lt;/pre>&lt;/div>&lt;p>윗 부분의 출처는 &lt;a class="link" href="https://junho85.pe.kr/1462" target="_blank" rel="noopener"
>준호씨의 블로그&lt;/a> 포스팅이다. (감사합니다!)&lt;/p></description></item><item><title>Apple Silicon Mac 에 Tensorflow 설치</title><link>https://interp.blog/apple-silicon-mac-tensorflow-install/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0900</pubDate><guid>https://interp.blog/apple-silicon-mac-tensorflow-install/</guid><description>&lt;img src="https://interp.blog/apple-silicon-mac-tensorflow-install/feature.png" alt="Featured image of post Apple Silicon Mac 에 Tensorflow 설치" />&lt;p>책 &lt;a class="link" href="http://www.yes24.com/Product/Goods/112028850" target="_blank" rel="noopener"
>개발자를 위한 머신러닝&amp;amp;딥러닝&lt;/a> 을 구매해서 읽어보고 있는데, 실습을 해 보기 위해 M1 Pro 칩의 Macbook Pro 에 환경을 설정하려고 했다.&lt;/p>
&lt;p>처음에는 virtualenv 로 가상 환경을 구성하고 tensorflow 를 pip 로 설치하면 되지 않을까? 하는 순진한 생각이었다. 그런데 예제 코드를 돌려보니 뿜어져 나오는 에러에 당황하고 말았다.&lt;/p>
&lt;p>다른 가이드들도 많지만 한번 이해하는 차원에서 여기 다시 정리해 둔다.&lt;/p>
&lt;h1 id="miniconda-설치">Miniconda 설치&lt;/h1>
&lt;p>&lt;a class="link" href="https://www.anaconda.com/products/distribution" target="_blank" rel="noopener"
>Anaconda&lt;/a> 에서 제공하는 tensorflow 관련 dependency 를 설치하기 위해, Anaconda 를 설치해야 한다. 하지만 여기서는 전체 설치를 할 필요는 없고 &lt;strong>Miniconda&lt;/strong> 만 설치해도 된다.&lt;/p>
&lt;p>다음 경로 중 하나를 선택해 Shell script 파일을 다운로드 받는다. 두 번째가 직접 다운로드 가능한 경로이다.&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.conda.io/en/latest/miniconda.html" target="_blank" rel="noopener"
>Miniconda Download page&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh" target="_blank" rel="noopener"
>Shell script 다운로드 링크&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>파일이 위치한 곳에서, 다음 명령을 차례대로 입력한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">bash ./Miniconda3-latest-MacOSX-arm64.sh -b -p &lt;span class="nv">$HOME&lt;/span>/miniconda
&lt;span class="nb">source&lt;/span> &lt;span class="nv">$HOME&lt;/span>/miniconda/bin/activate
conda
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>conda&lt;/code> 명령에 에러가 없으면 설치가 완료되었다. 추가로 다음을 입력해 주자.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">conda init &lt;span class="o">{&lt;/span>shell&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>{shell}&lt;/code> 에는 현재 사용중인 쉘을 입력한다. bash, zsh 같은 것 말이다. 잘 모르겠다면 &lt;code>echo $SHELL&lt;/code> 을 입력해서 알아내자.&lt;/p>
&lt;h1 id="conda-환경에서-tensorflow-설치">Conda 환경에서 Tensorflow 설치&lt;/h1>
&lt;p>&lt;a class="link" href="https://developer.apple.com/metal/tensorflow-plugin/" target="_blank" rel="noopener"
>Apple Developer Page&lt;/a> 에 안내된 대로 설치하면 완료된다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">conda create -n tf-env &lt;span class="nv">python&lt;/span>&lt;span class="o">=&lt;/span>3.8
conda install -c apple tensorflow-deps
&lt;/code>&lt;/pre>&lt;/div>&lt;p>위와 같이 conda environment 를 설정한다.&lt;/p>
&lt;p>Python 버전은 &lt;em>3.8&lt;/em> 이 테스트되었고 다른 버전에 대해서는 자잘한 문제를 일으킬 수 있으니, 버전 업그레이드는 추천하지 않는다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">conda activate tf-cert3.8
pip install tensorflow-macos&lt;span class="o">==&lt;/span>2.9.0
pip install tensorflow-metal&lt;span class="o">==&lt;/span>0.5.0
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>tensorflow-macos&lt;/code> 나 &lt;code>tensorflow-metal&lt;/code> 의 버전도 가급적이면 그대로 놔 두길 추천한다. 참고로 최신 버전은 현재 &lt;em>2.11.0&lt;/em> 까지 확인되었다.&lt;/p>
&lt;h1 id="설치-확인">설치 확인&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">tensorflow&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">tf&lt;/span>
&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">__version__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>버전이 잘 출력되면 성공이다.&lt;/p>
&lt;h1 id="테스트-코드-확인">테스트 코드 확인&lt;/h1>
&lt;p>여려 예제가 있겠지만, 책의 첫 번째 예제 코드를 실행해 보자.&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/rickiepark/aiml4coders/blob/main/ch01/01-first-model.ipynb" target="_blank" rel="noopener"
>여기에서&lt;/a> Jupyter Notebook 파일로 제공되고 있으니 코드만 긁어다가 파이썬으로 실행해서 문제가 없어야 한다. (혹시 코드가 궁금하다면, 책을 한 번 읽어보길 권한다!)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">tensorflow&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">tf&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">tensorflow.keras&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Sequential&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">tensorflow.keras.layers&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Dense&lt;/span>
&lt;span class="n">dense&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Dense&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">units&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">input_shape&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Sequential&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">dense&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">optimizer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sgd&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loss&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;mean_squared_error&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">xs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">3.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">4.0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">dtype&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">float&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">ys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">3.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">3.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">7.0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">dtype&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">float&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ys&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">epochs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Mac 에서 Eclipse Home/End 키 바인딩 하기</title><link>https://interp.blog/mac-eclipse-key-binding-home-end/</link><pubDate>Tue, 20 Dec 2022 10:57:42 +0900</pubDate><guid>https://interp.blog/mac-eclipse-key-binding-home-end/</guid><description>&lt;p>아이폰, 아이패드, 애플워치까지 갖고 있지만 macbook 을 본격적으로 써 본지 만 1년도 안 된다. 그래서 윈도우에서 즐겨 쓰던 Home/End 가 Mac 에서는 Cmd 키와 화살표로만 이뤄지는 걸 극복하는데 너무 힘들었다. 물론 적응하면 되겠지만, 습관이란 게 무서운 거라고.&lt;/p>
&lt;p>결국 어떻게 하면 고칠까 알아보면서 하나씩 적용하고 있다. 일단 KeyBindings 에서 Home/End 키로 줄 시작과 줄 끝으로 이동하도록 해 두는 걸 적용했다. (&lt;a class="link" href="https://apple.stackexchange.com/questions/16135/remap-home-and-end-to-beginning-and-end-of-line" target="_blank" rel="noopener"
>링크&lt;/a>)&lt;/p>
&lt;p>그런데 어째선지, Eclipse 기반의 에디터에서는 이것과 무관하게 Home/End 가 &amp;lsquo;페이지 시작/끝&amp;rsquo; 으로 작동하는게 아닌가! Page Up/Down 키가 옆에 버젓이 있는데도 말이다! 최근에 PostgreSQL (정확히는 &lt;a class="link" href="https://docs.timescale.com/" target="_blank" rel="noopener"
>TimescaleDB&lt;/a>) 를 조사할 기회가 생겨서 &lt;a class="link" href="https://dbeaver.io/" target="_blank" rel="noopener"
>DBeaver&lt;/a> 를 설치했는데, 이 친구도 Eclipse 기반의 에디터라서 KeyBindings 설정 내용과 딴판으로 놀았었다.&lt;/p>
&lt;p>그렇다, 이 글을 쓰는 이유 되시겠다.&lt;/p>
&lt;h2 id="키-설정을-바꿔야-한다">키 설정을 바꿔야 한다&lt;/h2>
&lt;ol>
&lt;li>Eclipse 의 Preference (설정) 을 열어보자. 어딘지 모르겠다면 &lt;code>Cmd + ,&lt;/code> 를 누르면 된다.&lt;/li>
&lt;li>여기서 &lt;code>Key&lt;/code> 라고 검색해 보면 &lt;strong>User Interface -&amp;gt; Key (키)&lt;/strong> 부분에 하이라이트가 되어 있다.&lt;/li>
&lt;li>카테고리를 눌러 Text Editor (텍스트 편집기) 로 이동한다.&lt;/li>
&lt;/ol>
&lt;p>여기서 다음 항목을 입맛대로 바꾸면 된다.&lt;/p>
&lt;ul>
&lt;li>Line Start (행 시작) : Home &lt;code>↖&lt;/code>&lt;/li>
&lt;li>Select Line Start (행 시작 선택) : Shift+Home &lt;code>⇧↖&lt;/code>&lt;/li>
&lt;li>Line End (행 끝) : End &lt;code>↘&lt;/code>&lt;/li>
&lt;li>Select Line End (행 끝 선택) : Shift+End &lt;code>⇧↘&lt;/code>&lt;/li>
&lt;li>Page Up (텍스트 시작) : Page Up &lt;code>⇞&lt;/code>&lt;/li>
&lt;li>Page Down (텍스트 끝) : Page Down &lt;code>⇟&lt;/code>&lt;/li>
&lt;/ul>
&lt;figure>
&lt;img loading="lazy" src="setting.png"/>
&lt;/figure>
&lt;h2 id="그래도-안-되면">그래도 안 되면?&lt;/h2>
&lt;p>내 경우엔 이렇게 두고 &lt;code>Apply and Close&lt;/code> 를 눌러도 적용이 안 되더라. 심플하게 Eclipse (여기선 DBeaver) 를 껐다 다시 실행시키면 되었다.&lt;/p></description></item></channel></rss>