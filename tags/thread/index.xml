<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>thread on InterP Blog</title><link>https://interp.blog/tags/thread/</link><description>Recent content in thread on InterP Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Thu, 24 Aug 2017 05:35:24 +0000</lastBuildDate><atom:link href="https://interp.blog/tags/thread/index.xml" rel="self" type="application/rss+xml"/><item><title>pthread_yield vs. sleep</title><link>https://interp.blog/pthread_yield-vs-sleep/</link><pubDate>Thu, 24 Aug 2017 05:35:24 +0000</pubDate><guid>https://interp.blog/pthread_yield-vs-sleep/</guid><description>&lt;p>&lt;code>pthread_yield()&lt;/code> 와 &lt;code>sleep()&lt;/code> 의 차이를 묻는 &lt;a class="link" href="https://stackoverflow.com/questions/936993/pthread-what-is-the-difference-between-time-hsleep-and-pthread-hpthread" target="_blank" rel="noopener"
>Stack Overflow 글&lt;/a> 의 답을 발췌한다.&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>pthread_yield()&lt;/code> 는, 호출한 쓰레드가 프로세서 사용을 그만두고, 스케쥴링이 될 때 까지 작업 큐(run queue)에서 기다립니다. 만약 호출되었을 때 작업 큐가 비어 있다면, 즉시 스케쥴링이 되겠죠.&lt;/p>
&lt;p>&lt;code>sleep()&lt;/code> 은 X초만큼 지나거나, 무시할 수 없는 시그널이 도착할 때 까지 (다른 쓰레드를 포함한) 호출 프로세스를 재웁니다.&lt;/p>
&lt;p>현재 쓰레드를 실제로 지연시키고 싶지 않지만 (호출 쓰레드 대신) 다른 쓰레드에게 실행권을 넘겨주고 싶은 경우라면, &lt;code>sleep()&lt;/code> 보단 &lt;code>pthread_yield()&lt;/code> 가 적합할 것 같습니다.&lt;/p>
&lt;/blockquote>
&lt;p>sleep 자체가 프로세스를 아예 멈추게 하니까 pthread_yield 를 통해서 나는 잠시 빠져주는 상태로 만드는 거였다. 코드를 보면서 감으로만 &amp;lsquo;아 저건 sleep() 같진 않지만 뭔가 이럴 때 쓰는거야&amp;rsquo; 라고만 어렴풋이 알고 있었는데, 무엇이든 확실히 알아야 한다.&lt;/p></description></item></channel></rss>